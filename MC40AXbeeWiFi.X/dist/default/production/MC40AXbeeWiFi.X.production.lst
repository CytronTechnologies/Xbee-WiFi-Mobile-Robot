

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Apr 16 21:40:48 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0088                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  0105                     	;# 
    94  0107                     	;# 
    95  0108                     	;# 
    96  0109                     	;# 
    97  010C                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0185                     	;# 
   103  0187                     	;# 
   104  0188                     	;# 
   105  0189                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0017                     _CCP1CON	set	23
   109  001D                     _CCP2CON	set	29
   110  0015                     _CCPR1L	set	21
   111  001B                     _CCPR2L	set	27
   112  0005                     _PORTA	set	5
   113  0006                     _PORTB	set	6
   114  0007                     _PORTC	set	7
   115  0008                     _PORTD	set	8
   116  0009                     _PORTE	set	9
   117  001A                     _RCREG	set	26
   118  0012                     _T2CON	set	18
   119  0019                     _TXREG	set	25
   120  00C4                     _CREN	set	196
   121  00C1                     _OERR	set	193
   122  0032                     _RB2	set	50
   123  0033                     _RB3	set	51
   124  0034                     _RB4	set	52
   125  0035                     _RB5	set	53
   126  0036                     _RB6	set	54
   127  0037                     _RB7	set	55
   128  0065                     _RCIF	set	101
   129  004A                     _RE2	set	74
   130  00C6                     _RX9	set	198
   131  00C7                     _SPEN	set	199
   132  0064                     _TXIF	set	100
   133  0092                     _PR2	set	146
   134  0099                     _SPBRG	set	153
   135  0085                     _TRISA	set	133
   136  0086                     _TRISB	set	134
   137  0087                     _TRISC	set	135
   138  0088                     _TRISD	set	136
   139  0089                     _TRISE	set	137
   140  04C2                     _BRGH	set	1218
   141  047C                     _IRCF0	set	1148
   142  047D                     _IRCF1	set	1149
   143  047E                     _IRCF2	set	1150
   144  04C6                     _TX9	set	1222
   145  04C5                     _TXEN	set	1221
   146  0188                     _ANSEL	set	392
   147  0189                     _ANSELH	set	393
   148                           
   149                           	psect	strings
   150  0003                     __pstrings:	
   151  0003                     stringtab:	
   152  0003                     __stringtab:	
   153  0003                     stringcode:	
   154                           ;	String table - string pointers are 1 byte each
   155                           
   156  0003                     stringdir:	
   157  0003  3000               	movlw	high stringdir
   158  0004  008A               	movwf	10
   159  0005  0804               	movf	4,w
   160  0006  0A84               	incf	4,f
   161  0007  0782               	addwf	2,f
   162  0008                     __stringbase:	
   163  0008  3400               	retlw	0
   164  0009                     __end_of__stringtab:	
   165  0009                     __stringdata:	
   166  0009                     STR_11:	
   167  0009  3420               	retlw	32	;' '
   168  000A  3420               	retlw	32	;' '
   169  000B  3420               	retlw	32	;' '
   170  000C  3420               	retlw	32	;' '
   171  000D  3420               	retlw	32	;' '
   172  000E  3420               	retlw	32	;' '
   173  000F  3420               	retlw	32	;' '
   174  0010  3420               	retlw	32	;' '
   175  0011  3400               	retlw	0
   176  0012                     STR_3:	
   177  0012  3447               	retlw	71	;'G'
   178  0013  346F               	retlw	111	;'o'
   179  0014  3420               	retlw	32	;' '
   180  0015  3420               	retlw	32	;' '
   181  0016  3420               	retlw	32	;' '
   182  0017  3420               	retlw	32	;' '
   183  0018  3420               	retlw	32	;' '
   184  0019  3420               	retlw	32	;' '
   185  001A  3400               	retlw	0
   186  001B                     STR_7:	
   187  001B  3454               	retlw	84	;'T'
   188  001C  3475               	retlw	117	;'u'
   189  001D  3472               	retlw	114	;'r'
   190  001E  346E               	retlw	110	;'n'
   191  001F  3420               	retlw	32	;' '
   192  0020  3420               	retlw	32	;' '
   193  0021  3420               	retlw	32	;' '
   194  0022  3420               	retlw	32	;' '
   195  0023  3400               	retlw	0
   196  0024                     STR_12:	
   197  0024  3453               	retlw	83	;'S'
   198  0025  3474               	retlw	116	;'t'
   199  0026  346F               	retlw	111	;'o'
   200  0027  3470               	retlw	112	;'p'
   201  0028  3420               	retlw	32	;' '
   202  0029  3420               	retlw	32	;' '
   203  002A  3420               	retlw	32	;' '
   204  002B  3420               	retlw	32	;' '
   205  002C  3400               	retlw	0
   206  002D                     STR_10:	
   207  002D  344C               	retlw	76	;'L'
   208  002E  3465               	retlw	101	;'e'
   209  002F  3466               	retlw	102	;'f'
   210  0030  3474               	retlw	116	;'t'
   211  0031  3420               	retlw	32	;' '
   212  0032  3420               	retlw	32	;' '
   213  0033  3420               	retlw	32	;' '
   214  0034  3420               	retlw	32	;' '
   215  0035  3400               	retlw	0
   216  0036                     STR_8:	
   217  0036  3452               	retlw	82	;'R'
   218  0037  3469               	retlw	105	;'i'
   219  0038  3467               	retlw	103	;'g'
   220  0039  3468               	retlw	104	;'h'
   221  003A  3474               	retlw	116	;'t'
   222  003B  3420               	retlw	32	;' '
   223  003C  3420               	retlw	32	;' '
   224  003D  3420               	retlw	32	;' '
   225  003E  3400               	retlw	0
   226  003F                     STR_1:	
   227  003F  344D               	retlw	77	;'M'
   228  0040  3443               	retlw	67	;'C'
   229  0041  3434               	retlw	52	;'4'
   230  0042  3430               	retlw	48	;'0'
   231  0043  3441               	retlw	65	;'A'
   232  0044  3420               	retlw	32	;' '
   233  0045  342B               	retlw	43	;'+'
   234  0046  3420               	retlw	32	;' '
   235  0047  3400               	retlw	0
   236  0048                     STR_4:	
   237  0048  3446               	retlw	70	;'F'
   238  0049  346F               	retlw	111	;'o'
   239  004A  3472               	retlw	114	;'r'
   240  004B  3477               	retlw	119	;'w'
   241  004C  3461               	retlw	97	;'a'
   242  004D  3472               	retlw	114	;'r'
   243  004E  3464               	retlw	100	;'d'
   244  004F  3420               	retlw	32	;' '
   245  0050  3400               	retlw	0
   246  0051                     STR_6:	
   247  0051  3442               	retlw	66	;'B'
   248  0052  3461               	retlw	97	;'a'
   249  0053  3463               	retlw	99	;'c'
   250  0054  346B               	retlw	107	;'k'
   251  0055  3477               	retlw	119	;'w'
   252  0056  3461               	retlw	97	;'a'
   253  0057  3472               	retlw	114	;'r'
   254  0058  3464               	retlw	100	;'d'
   255  0059  3400               	retlw	0
   256  005A                     STR_2:	
   257  005A  3458               	retlw	88	;'X'
   258  005B  3462               	retlw	98	;'b'
   259  005C  3465               	retlw	101	;'e'
   260  005D  3465               	retlw	101	;'e'
   261  005E  3457               	retlw	87	;'W'
   262  005F  3469               	retlw	105	;'i'
   263  0060  3446               	retlw	70	;'F'
   264  0061  3469               	retlw	105	;'i'
   265  0062  3400               	retlw	0
   266  0063                     __end_of__stringdata:	
   267                           
   268                           ; #config settings
   269  0000                     
   270                           	psect	cinit
   271  07FC                     start_initialization:	
   272  07FC                     __initialization:	
   273  07FC                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  07FC                     __end_of__initialization:	
   277  07FC  0183               	clrf	3
   278  07FD  120A  118A  2E95   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:	
   282  0070                     ?_lcdWrite:	
   283  0070                     ?_picInit:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ??_picInit:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_beep:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_lcdInit:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_lcdPutstr:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ??_uartReceive:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_main:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_uartReceive:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?___bmul:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?___wmul:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?___ftpack:	
   314                           ; 2 bytes @ 0x0
   315                           
   316  0070                     ?___aldiv:	
   317                           ; 3 bytes @ 0x0
   318                           
   319  0070                     lcdWrite@data:	
   320                           ; 4 bytes @ 0x0
   321                           
   322  0070                     ___bmul@multiplicand:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     beep@delayMs:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ___wmul@multiplier:	
   329                           ; 2 bytes @ 0x0
   330                           
   331  0070                     ___ftpack@arg:	
   332                           ; 2 bytes @ 0x0
   333                           
   334  0070                     ___aldiv@divisor:	
   335                           ; 3 bytes @ 0x0
   336                           
   337                           
   338                           ; 4 bytes @ 0x0
   339  0070                     	ds	1
   340  0071                     ??_lcdWrite:	
   341  0071                     ??___bmul:	
   342                           ; 0 bytes @ 0x1
   343                           
   344                           
   345                           ; 0 bytes @ 0x1
   346  0071                     	ds	1
   347  0072                     ??_beep:	
   348  0072                     lcdWrite@rs:	
   349                           ; 0 bytes @ 0x2
   350                           
   351  0072                     ___bmul@product:	
   352                           ; 1 bytes @ 0x2
   353                           
   354  0072                     ___wmul@multiplicand:	
   355                           ; 1 bytes @ 0x2
   356                           
   357                           
   358                           ; 2 bytes @ 0x2
   359  0072                     	ds	1
   360  0073                     ??_lcdInit:	
   361  0073                     ?_lcdGoto:	
   362                           ; 0 bytes @ 0x3
   363                           
   364  0073                     ??_lcdPutstr:	
   365                           ; 0 bytes @ 0x3
   366                           
   367  0073                     lcdGoto@col:	
   368                           ; 0 bytes @ 0x3
   369                           
   370  0073                     ___bmul@multiplier:	
   371                           ; 1 bytes @ 0x3
   372                           
   373  0073                     ___ftpack@exp:	
   374                           ; 1 bytes @ 0x3
   375                           
   376                           
   377                           ; 1 bytes @ 0x3
   378  0073                     	ds	1
   379  0074                     ??_lcdGoto:	
   380  0074                     ??___wmul:	
   381                           ; 0 bytes @ 0x4
   382                           
   383  0074                     lcdPutstr@s:	
   384                           ; 0 bytes @ 0x4
   385                           
   386  0074                     beep@times:	
   387                           ; 1 bytes @ 0x4
   388                           
   389  0074                     ___ftpack@sign:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0074                     ___wmul@product:	
   393                           ; 1 bytes @ 0x4
   394                           
   395  0074                     ___aldiv@dividend:	
   396                           ; 2 bytes @ 0x4
   397                           
   398                           
   399                           ; 4 bytes @ 0x4
   400  0074                     	ds	1
   401  0075                     ??___ftpack:	
   402  0075                     lcdGoto@row:	
   403                           ; 0 bytes @ 0x5
   404                           
   405  0075                     beep@loop:	
   406                           ; 1 bytes @ 0x5
   407                           
   408                           
   409                           ; 2 bytes @ 0x5
   410  0075                     	ds	1
   411  0076                     ?___awdiv:	
   412  0076                     ___awdiv@divisor:	
   413                           ; 2 bytes @ 0x6
   414                           
   415                           
   416                           ; 2 bytes @ 0x6
   417  0076                     	ds	2
   418  0078                     ??___aldiv:	
   419  0078                     ?___lltoft:	
   420                           ; 0 bytes @ 0x8
   421                           
   422  0078                     ___awdiv@dividend:	
   423                           ; 3 bytes @ 0x8
   424                           
   425  0078                     ___lltoft@c:	
   426                           ; 2 bytes @ 0x8
   427                           
   428                           
   429                           ; 4 bytes @ 0x8
   430  0078                     	ds	2
   431  007A                     ??___awdiv:	
   432                           
   433                           ; 0 bytes @ 0xA
   434  007A                     	ds	1
   435  007B                     ??_setPwmRC1:	
   436  007B                     ??_setPwmRC2:	
   437                           ; 0 bytes @ 0xB
   438                           
   439                           
   440                           ; 0 bytes @ 0xB
   441  007B                     	ds	1
   442  007C                     ??___lltoft:	
   443  007C                     setPwmRC1@a:	
   444                           ; 0 bytes @ 0xC
   445                           
   446  007C                     setPwmRC2@a:	
   447                           ; 2 bytes @ 0xC
   448                           
   449                           
   450                           ; 2 bytes @ 0xC
   451  007C                     	ds	1
   452  007D                     ___lltoft@exp:	
   453                           
   454                           ; 1 bytes @ 0xD
   455  007D                     	ds	1
   456  007E                     ??_uartInit:	
   457                           
   458                           	psect	cstackBANK0
   459  0020                     __pcstackBANK0:	
   460                           ; 0 bytes @ 0xE
   461                           
   462  0020                     ?___ftdiv:	
   463  0020                     ___aldiv@counter:	
   464                           ; 3 bytes @ 0x0
   465                           
   466  0020                     ___awdiv@counter:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0020                     ___ftdiv@f2:	
   470                           ; 1 bytes @ 0x0
   471                           
   472                           
   473                           ; 3 bytes @ 0x0
   474  0020                     	ds	1
   475  0021                     ___aldiv@sign:	
   476  0021                     ___awdiv@sign:	
   477                           ; 1 bytes @ 0x1
   478                           
   479                           
   480                           ; 1 bytes @ 0x1
   481  0021                     	ds	1
   482  0022                     ___awdiv@quotient:	
   483  0022                     ___aldiv@quotient:	
   484                           ; 2 bytes @ 0x2
   485                           
   486                           
   487                           ; 4 bytes @ 0x2
   488  0022                     	ds	1
   489  0023                     ___ftdiv@f1:	
   490                           
   491                           ; 3 bytes @ 0x3
   492  0023                     	ds	3
   493  0026                     ?_setPwmRC1:	
   494  0026                     ?_setPwmRC2:	
   495                           ; 0 bytes @ 0x6
   496                           
   497  0026                     ??___ftdiv:	
   498                           ; 0 bytes @ 0x6
   499                           
   500  0026                     setPwmRC1@freq:	
   501                           ; 0 bytes @ 0x6
   502                           
   503  0026                     setPwmRC2@freq:	
   504                           ; 2 bytes @ 0x6
   505                           
   506                           
   507                           ; 2 bytes @ 0x6
   508  0026                     	ds	2
   509  0028                     setPwmRC1@duty:	
   510  0028                     setPwmRC2@duty:	
   511                           ; 2 bytes @ 0x8
   512                           
   513                           
   514                           ; 2 bytes @ 0x8
   515  0028                     	ds	2
   516  002A                     ?_motor:	
   517  002A                     motor@speedRM:	
   518                           ; 0 bytes @ 0xA
   519                           
   520  002A                     ___ftdiv@cntr:	
   521                           ; 1 bytes @ 0xA
   522                           
   523                           
   524                           ; 1 bytes @ 0xA
   525  002A                     	ds	1
   526  002B                     ??_motor:	
   527  002B                     ___ftdiv@f3:	
   528                           ; 0 bytes @ 0xB
   529                           
   530                           
   531                           ; 3 bytes @ 0xB
   532  002B                     	ds	2
   533  002D                     motor@maxSpeed:	
   534                           
   535                           ; 1 bytes @ 0xD
   536  002D                     	ds	1
   537  002E                     motor@speedLM:	
   538  002E                     ___ftdiv@exp:	
   539                           ; 1 bytes @ 0xE
   540                           
   541                           
   542                           ; 1 bytes @ 0xE
   543  002E                     	ds	1
   544  002F                     motor@speed:	
   545  002F                     ___ftdiv@sign:	
   546                           ; 1 bytes @ 0xF
   547                           
   548                           
   549                           ; 1 bytes @ 0xF
   550  002F                     	ds	1
   551  0030                     ?___ftadd:	
   552  0030                     ___ftadd@f1:	
   553                           ; 3 bytes @ 0x10
   554                           
   555                           
   556                           ; 3 bytes @ 0x10
   557  0030                     	ds	3
   558  0033                     ___ftadd@f2:	
   559                           
   560                           ; 3 bytes @ 0x13
   561  0033                     	ds	3
   562  0036                     ??___ftadd:	
   563                           
   564                           ; 0 bytes @ 0x16
   565  0036                     	ds	4
   566  003A                     ___ftadd@sign:	
   567                           
   568                           ; 1 bytes @ 0x1A
   569  003A                     	ds	1
   570  003B                     ___ftadd@exp2:	
   571                           
   572                           ; 1 bytes @ 0x1B
   573  003B                     	ds	1
   574  003C                     ___ftadd@exp1:	
   575                           
   576                           ; 1 bytes @ 0x1C
   577  003C                     	ds	1
   578  003D                     ?___fttol:	
   579  003D                     ___fttol@f1:	
   580                           ; 4 bytes @ 0x1D
   581                           
   582                           
   583                           ; 3 bytes @ 0x1D
   584  003D                     	ds	4
   585  0041                     ??___fttol:	
   586                           
   587                           ; 0 bytes @ 0x21
   588  0041                     	ds	4
   589  0045                     ___fttol@sign1:	
   590                           
   591                           ; 1 bytes @ 0x25
   592  0045                     	ds	1
   593  0046                     ___fttol@lval:	
   594                           
   595                           ; 4 bytes @ 0x26
   596  0046                     	ds	4
   597  004A                     ___fttol@exp1:	
   598                           
   599                           ; 1 bytes @ 0x2A
   600  004A                     	ds	1
   601  004B                     ?_uartInit:	
   602  004B                     uartInit@baudrate:	
   603                           ; 0 bytes @ 0x2B
   604                           
   605                           
   606                           ; 4 bytes @ 0x2B
   607  004B                     	ds	4
   608  004F                     _uartInit$562:	
   609                           
   610                           ; 3 bytes @ 0x2F
   611  004F                     	ds	3
   612  0052                     ??_main:	
   613                           
   614                           ; 0 bytes @ 0x32
   615  0052                     	ds	2
   616  0054                     main@inByte:	
   617                           
   618                           ; 1 bytes @ 0x34
   619  0054                     	ds	1
   620                           
   621                           	psect	maintext
   622  0695                     __pmaintext:	
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 42 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  inByte          1   52[BANK0 ] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;		None               void
   635 ;; Registers used:
   636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 17F/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       1       0       0       0
   644 ;;      Temps:          0       2       0       0       0
   645 ;;      Totals:         0       3       0       0       0
   646 ;;Total ram usage:        3 bytes
   647 ;; Hardware stack levels required when called:    3
   648 ;; This function calls:
   649 ;;		_beep
   650 ;;		_lcdGoto
   651 ;;		_lcdInit
   652 ;;		_lcdPutstr
   653 ;;		_lcdWrite
   654 ;;		_motor
   655 ;;		_picInit
   656 ;;		_uartInit
   657 ;;		_uartReceive
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  0695                     _main:	
   666                           
   667                           ;main.c: 44: uChar inByte;
   668                           ;main.c: 46: picInit();
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672  0695  120A  158A  26D2  120A  118A  	fcall	_picInit
   673                           
   674                           ;main.c: 47: lcdInit();
   675  069A  120A  118A  20A8  120A  118A  	fcall	_lcdInit
   676                           
   677                           ;main.c: 48: uartInit(9600);
   678  069F  3000               	movlw	0
   679  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   680  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   681  06A2  00CE               	movwf	uartInit@baudrate+3
   682  06A3  3000               	movlw	0
   683  06A4  00CD               	movwf	uartInit@baudrate+2
   684  06A5  3025               	movlw	37
   685  06A6  00CC               	movwf	uartInit@baudrate+1
   686  06A7  3080               	movlw	128
   687  06A8  00CB               	movwf	uartInit@baudrate
   688  06A9  120A  118A  249C  120A  118A  	fcall	_uartInit
   689                           
   690                           ;main.c: 49: beep(2, 50);
   691  06AE  3032               	movlw	50
   692  06AF  00F0               	movwf	beep@delayMs
   693  06B0  3000               	movlw	0
   694  06B1  00F1               	movwf	beep@delayMs+1
   695  06B2  3002               	movlw	2
   696  06B3  120A  118A  2067  120A  118A  	fcall	_beep
   697                           
   698                           ;main.c: 51: (lcdWrite(0, 1), _delay((unsigned long)((2)*(8000000/4000.0))));
   699  06B8  01F0               	clrf	lcdWrite@data
   700  06B9  0AF0               	incf	lcdWrite@data,f
   701  06BA  3000               	movlw	0
   702  06BB  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
   703  06C0  3006               	movlw	6
   704  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   705  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   706  06C3  00D3               	movwf	??_main+1
   707  06C4  3030               	movlw	48
   708  06C5  00D2               	movwf	??_main
   709  06C6                     u2377:	
   710  06C6  0BD2               	decfsz	??_main,f
   711  06C7  2EC6               	goto	u2377
   712  06C8  0BD3               	decfsz	??_main+1,f
   713  06C9  2EC6               	goto	u2377
   714  06CA  0000               	nop
   715                           
   716                           ;main.c: 52: lcdPutstr("MC40A + ");
   717  06CB  3037               	movlw	(STR_1-__stringbase)& (0+255)
   718  06CC  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   719                           
   720                           ;main.c: 53: lcdGoto(2,1);
   721  06D1  01F3               	clrf	lcdGoto@col
   722  06D2  0AF3               	incf	lcdGoto@col,f
   723  06D3  3002               	movlw	2
   724  06D4  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   725                           
   726                           ;main.c: 54: lcdPutstr("XbeeWiFi");
   727  06D9  3052               	movlw	(STR_2-__stringbase)& (0+255)
   728  06DA  2FA6               	goto	L1
   729  06DB                     l1839:	
   730                           
   731                           ;main.c: 77: {
   732                           ;main.c: 79: uartReceive();
   733  06DB  120A  158A  269D  120A  118A  	fcall	_uartReceive
   734                           
   735                           ;main.c: 80: uartReceive();
   736  06E0  120A  158A  269D  120A  118A  	fcall	_uartReceive
   737                           
   738                           ;main.c: 81: uartReceive();
   739  06E5  120A  158A  269D  120A  118A  	fcall	_uartReceive
   740                           
   741                           ;main.c: 83: motor(80, 80);
   742  06EA  3050               	movlw	80
   743  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   744  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   745  06ED  00D2               	movwf	??_main
   746  06EE  0852               	movf	??_main,w
   747  06EF  00AA               	movwf	motor@speedRM
   748  06F0  3050               	movlw	80
   749  06F1  120A  118A  2247  120A  118A  	fcall	_motor
   750                           
   751                           ;main.c: 85: lcdGoto(1,1);
   752  06F6  01F3               	clrf	lcdGoto@col
   753  06F7  0AF3               	incf	lcdGoto@col,f
   754  06F8  3001               	movlw	1
   755  06F9  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   756                           
   757                           ;main.c: 86: lcdPutstr("Go      ");
   758  06FE  300A               	movlw	(STR_3-__stringbase)& (0+255)
   759  06FF  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   760                           
   761                           ;main.c: 87: lcdGoto(2,1);
   762  0704  01F3               	clrf	lcdGoto@col
   763  0705  0AF3               	incf	lcdGoto@col,f
   764  0706  3002               	movlw	2
   765  0707  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   766                           
   767                           ;main.c: 88: lcdPutstr("Forward ");
   768  070C  3040               	movlw	(STR_4-__stringbase)& (0+255)
   769  070D  2FA6               	goto	L1
   770  070E                     l1851:	
   771                           ;main.c: 89: }
   772                           
   773                           
   774                           ;main.c: 91: {
   775                           ;main.c: 93: uartReceive();
   776  070E  120A  158A  269D  120A  118A  	fcall	_uartReceive
   777                           
   778                           ;main.c: 94: uartReceive();
   779  0713  120A  158A  269D  120A  118A  	fcall	_uartReceive
   780                           
   781                           ;main.c: 95: uartReceive();
   782  0718  120A  158A  269D  120A  118A  	fcall	_uartReceive
   783                           
   784                           ;main.c: 97: motor(-80, -80);
   785  071D  30B0               	movlw	-80
   786  071E  1283               	bcf	3,5	;RP0=0, select bank0
   787  071F  1303               	bcf	3,6	;RP1=0, select bank0
   788  0720  00D2               	movwf	??_main
   789  0721  0852               	movf	??_main,w
   790  0722  00AA               	movwf	motor@speedRM
   791  0723  30B0               	movlw	-80
   792  0724  120A  118A  2247  120A  118A  	fcall	_motor
   793                           
   794                           ;main.c: 99: lcdGoto(1,1);
   795  0729  01F3               	clrf	lcdGoto@col
   796  072A  0AF3               	incf	lcdGoto@col,f
   797  072B  3001               	movlw	1
   798  072C  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   799                           
   800                           ;main.c: 100: lcdPutstr("Go      ");
   801  0731  300A               	movlw	(STR_3-__stringbase)& (0+255)
   802  0732  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   803                           
   804                           ;main.c: 101: lcdGoto(2,1);
   805  0737  01F3               	clrf	lcdGoto@col
   806  0738  0AF3               	incf	lcdGoto@col,f
   807  0739  3002               	movlw	2
   808  073A  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   809                           
   810                           ;main.c: 102: lcdPutstr("Backward");
   811  073F  3049               	movlw	(STR_6-__stringbase)& (0+255)
   812  0740  2FA6               	goto	L1
   813  0741                     l1863:	
   814                           ;main.c: 103: }
   815                           
   816                           
   817                           ;main.c: 105: {
   818                           ;main.c: 107: uartReceive();
   819  0741  120A  158A  269D  120A  118A  	fcall	_uartReceive
   820                           
   821                           ;main.c: 108: uartReceive();
   822  0746  120A  158A  269D  120A  118A  	fcall	_uartReceive
   823                           
   824                           ;main.c: 109: uartReceive();
   825  074B  120A  158A  269D  120A  118A  	fcall	_uartReceive
   826                           
   827                           ;main.c: 111: motor(80, -80);
   828  0750  30B0               	movlw	-80
   829  0751  1283               	bcf	3,5	;RP0=0, select bank0
   830  0752  1303               	bcf	3,6	;RP1=0, select bank0
   831  0753  00D2               	movwf	??_main
   832  0754  0852               	movf	??_main,w
   833  0755  00AA               	movwf	motor@speedRM
   834  0756  3050               	movlw	80
   835  0757  120A  118A  2247  120A  118A  	fcall	_motor
   836                           
   837                           ;main.c: 113: lcdGoto(1,1);
   838  075C  01F3               	clrf	lcdGoto@col
   839  075D  0AF3               	incf	lcdGoto@col,f
   840  075E  3001               	movlw	1
   841  075F  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   842                           
   843                           ;main.c: 114: lcdPutstr("Turn    ");
   844  0764  3013               	movlw	(STR_7-__stringbase)& (0+255)
   845  0765  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   846                           
   847                           ;main.c: 115: lcdGoto(2,1);
   848  076A  01F3               	clrf	lcdGoto@col
   849  076B  0AF3               	incf	lcdGoto@col,f
   850  076C  3002               	movlw	2
   851  076D  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   852                           
   853                           ;main.c: 116: lcdPutstr("Right   ");
   854  0772  302E               	movlw	(STR_8-__stringbase)& (0+255)
   855  0773  2FA6               	goto	L1
   856  0774                     l1875:	
   857                           ;main.c: 117: }
   858                           
   859                           
   860                           ;main.c: 119: {
   861                           ;main.c: 121: uartReceive();
   862  0774  120A  158A  269D  120A  118A  	fcall	_uartReceive
   863                           
   864                           ;main.c: 122: uartReceive();
   865  0779  120A  158A  269D  120A  118A  	fcall	_uartReceive
   866                           
   867                           ;main.c: 123: uartReceive();
   868  077E  120A  158A  269D  120A  118A  	fcall	_uartReceive
   869                           
   870                           ;main.c: 125: motor(-80, 80);
   871  0783  3050               	movlw	80
   872  0784  1283               	bcf	3,5	;RP0=0, select bank0
   873  0785  1303               	bcf	3,6	;RP1=0, select bank0
   874  0786  00D2               	movwf	??_main
   875  0787  0852               	movf	??_main,w
   876  0788  00AA               	movwf	motor@speedRM
   877  0789  30B0               	movlw	-80
   878  078A  120A  118A  2247  120A  118A  	fcall	_motor
   879                           
   880                           ;main.c: 127: lcdGoto(1,1);
   881  078F  01F3               	clrf	lcdGoto@col
   882  0790  0AF3               	incf	lcdGoto@col,f
   883  0791  3001               	movlw	1
   884  0792  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   885                           
   886                           ;main.c: 128: lcdPutstr("Turn    ");
   887  0797  3013               	movlw	(STR_7-__stringbase)& (0+255)
   888  0798  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   889                           
   890                           ;main.c: 129: lcdGoto(2,1);
   891  079D  01F3               	clrf	lcdGoto@col
   892  079E  0AF3               	incf	lcdGoto@col,f
   893  079F  3002               	movlw	2
   894  07A0  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   895                           
   896                           ;main.c: 130: lcdPutstr("Left    ");
   897  07A5  3025               	movlw	(STR_10-__stringbase)& (0+255)
   898  07A6                     L1:	
   899  07A6  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   900  07AB                     l1835:	
   901                           ;main.c: 56: while(1)
   902                           
   903                           ;main.c: 131: }
   904                           
   905                           
   906                           ;main.c: 57: {
   907                           ;main.c: 75: inByte = uartReceive();
   908  07AB  120A  158A  269D  120A  118A  	fcall	_uartReceive
   909  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   910  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   911  07B2  00D2               	movwf	??_main
   912  07B3  0852               	movf	??_main,w
   913  07B4  00D4               	movwf	main@inByte
   914                           
   915                           ;main.c: 76: if(inByte == 'F')
   916  07B5  0854               	movf	main@inByte,w
   917  07B6  3A46               	xorlw	70
   918  07B7  1903               	btfsc	3,2
   919  07B8  2EDB               	goto	l1839
   920                           
   921                           ;main.c: 90: else if(inByte == 'B')
   922  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   923  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   924  07BB  0854               	movf	main@inByte,w
   925  07BC  3A42               	xorlw	66
   926  07BD  1903               	btfsc	3,2
   927  07BE  2F0E               	goto	l1851
   928                           
   929                           ;main.c: 104: else if(inByte == 'R')
   930  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   931  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   932  07C1  0854               	movf	main@inByte,w
   933  07C2  3A52               	xorlw	82
   934  07C3  1903               	btfsc	3,2
   935  07C4  2F41               	goto	l1863
   936                           
   937                           ;main.c: 118: else if(inByte == 'L')
   938  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   939  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   940  07C7  0854               	movf	main@inByte,w
   941  07C8  3A4C               	xorlw	76
   942  07C9  1903               	btfsc	3,2
   943  07CA  2F74               	goto	l1875
   944                           
   945                           ;main.c: 132: else if(inByte == 'S')
   946  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   947  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   948  07CD  0854               	movf	main@inByte,w
   949  07CE  3A53               	xorlw	83
   950  07CF  1D03               	skipz
   951  07D0  2FAB               	goto	l1835
   952                           
   953                           ;main.c: 133: {
   954                           ;main.c: 135: uartReceive();
   955  07D1  120A  158A  269D  120A  118A  	fcall	_uartReceive
   956                           
   957                           ;main.c: 136: uartReceive();
   958  07D6  120A  158A  269D  120A  118A  	fcall	_uartReceive
   959                           
   960                           ;main.c: 138: motor(0, 0);
   961  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   962  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   963  07DD  01AA               	clrf	motor@speedRM
   964  07DE  3000               	movlw	0
   965  07DF  120A  118A  2247  120A  118A  	fcall	_motor
   966                           
   967                           ;main.c: 140: lcdGoto(1,1);
   968  07E4  01F3               	clrf	lcdGoto@col
   969  07E5  0AF3               	incf	lcdGoto@col,f
   970  07E6  3001               	movlw	1
   971  07E7  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   972                           
   973                           ;main.c: 141: lcdPutstr("        ");
   974  07EC  3001               	movlw	(STR_11-__stringbase)& (0+255)
   975  07ED  120A  158A  273C  120A  118A  	fcall	_lcdPutstr
   976                           
   977                           ;main.c: 142: lcdGoto(2,1);
   978  07F2  01F3               	clrf	lcdGoto@col
   979  07F3  0AF3               	incf	lcdGoto@col,f
   980  07F4  3002               	movlw	2
   981  07F5  120A  158A  276A  120A  118A  	fcall	_lcdGoto
   982                           
   983                           ;main.c: 143: lcdPutstr("Stop    ");
   984  07FA  301C               	movlw	(STR_12-__stringbase)& (0+255)
   985  07FB  2FA6               	goto	L1
   986  07FC                     __end_of_main:	
   987                           
   988                           	psect	text1
   989  0E9D                     __ptext1:	
   990 ;; *************** function _uartReceive *****************
   991 ;; Defined at:
   992 ;;		line 50 in file "uart.h"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _uartReceive
  1021  0E9D                     _uartReceive:	
  1022                           
  1023                           ;uart.h: 52: if(OERR)
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in _uartReceive: [wreg]
  1027  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0E9F  1C98               	btfss	24,1	;volatile
  1030  0EA0  2EA3               	goto	l146
  1031                           
  1032                           ;uart.h: 53: {
  1033                           ;uart.h: 54: CREN = 0;
  1034  0EA1  1218               	bcf	24,4	;volatile
  1035                           
  1036                           ;uart.h: 55: CREN = 1;
  1037  0EA2  1618               	bsf	24,4	;volatile
  1038  0EA3                     l146:	
  1039                           ;uart.h: 56: }
  1040                           ;uart.h: 57: while(!RCIF);
  1041                           
  1042  0EA3  1E8C               	btfss	12,5	;volatile
  1043  0EA4  2EA3               	goto	l146
  1044                           
  1045                           ;uart.h: 58: return RCREG;
  1046  0EA5  081A               	movf	26,w	;volatile
  1047  0EA6  0008               	return
  1048  0EA7                     __end_of_uartReceive:	
  1049                           
  1050                           	psect	text2
  1051  049C                     __ptext2:	
  1052 ;; *************** function _uartInit *****************
  1053 ;; Defined at:
  1054 ;;		line 19 in file "uart.h"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  baudrate        4   43[BANK0 ] unsigned long 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;		None               void
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       4       0       0       0
  1069 ;;      Locals:         0       3       0       0       0
  1070 ;;      Temps:          0       0       0       0       0
  1071 ;;      Totals:         0       7       0       0       0
  1072 ;;Total ram usage:        7 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    2
  1075 ;; This function calls:
  1076 ;;		___ftadd
  1077 ;;		___ftdiv
  1078 ;;		___fttol
  1079 ;;		___lltoft
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _uartInit
  1087  049C                     _uartInit:	
  1088                           
  1089                           ;uart.h: 21: TXEN = 1;
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _uartInit: [wreg+status,2+status,0+pclath+cstack]
  1093  049C  1683               	bsf	3,5	;RP0=1, select bank1
  1094  049D  1303               	bcf	3,6	;RP1=0, select bank1
  1095  049E  1698               	bsf	24,5	;volatile
  1096                           
  1097                           ;uart.h: 22: TX9 = 0;
  1098  049F  1318               	bcf	24,6	;volatile
  1099                           
  1100                           ;uart.h: 23: RX9 = 0;
  1101  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1102  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1103  04A2  1318               	bcf	24,6	;volatile
  1104                           
  1105                           ;uart.h: 24: CREN = 1;
  1106  04A3  1618               	bsf	24,4	;volatile
  1107                           
  1108                           ;uart.h: 25: SPEN = 1;
  1109  04A4  1798               	bsf	24,7	;volatile
  1110                           
  1111                           ;uart.h: 27: if(baudrate > 9000)
  1112  04A5  3000               	movlw	0
  1113  04A6  024E               	subwf	uartInit@baudrate+3,w
  1114  04A7  1D03               	skipz
  1115  04A8  2CB3               	goto	u2105
  1116  04A9  3000               	movlw	0
  1117  04AA  024D               	subwf	uartInit@baudrate+2,w
  1118  04AB  1D03               	skipz
  1119  04AC  2CB3               	goto	u2105
  1120  04AD  3023               	movlw	35
  1121  04AE  024C               	subwf	uartInit@baudrate+1,w
  1122  04AF  1D03               	skipz
  1123  04B0  2CB3               	goto	u2105
  1124  04B1  3029               	movlw	41
  1125  04B2  024B               	subwf	uartInit@baudrate,w
  1126  04B3                     u2105:	
  1127  04B3  1C03               	skipc
  1128  04B4  2D18               	goto	l1699
  1129                           
  1130                           ;uart.h: 28: {
  1131                           ;uart.h: 29: BRGH = 1;
  1132  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  1133  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  1134  04B7  1518               	bsf	24,2	;volatile
  1135                           
  1136                           ;uart.h: 30: SPBRG = (uInt) (((float) 8000000 / (float) baudrate / 16.0) - 0.5);
  1137  04B8  3024               	movlw	36
  1138  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1139  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1140  04BB  00A3               	movwf	___ftdiv@f1
  1141  04BC  30F4               	movlw	244
  1142  04BD  00A4               	movwf	___ftdiv@f1+1
  1143  04BE  304A               	movlw	74
  1144  04BF  00A5               	movwf	___ftdiv@f1+2
  1145  04C0  084E               	movf	uartInit@baudrate+3,w
  1146  04C1  00FB               	movwf	___lltoft@c+3
  1147  04C2  084D               	movf	uartInit@baudrate+2,w
  1148  04C3  00FA               	movwf	___lltoft@c+2
  1149  04C4  084C               	movf	uartInit@baudrate+1,w
  1150  04C5  00F9               	movwf	___lltoft@c+1
  1151  04C6  084B               	movf	uartInit@baudrate,w
  1152  04C7  00F8               	movwf	___lltoft@c
  1153  04C8  120A  158A  2711  120A  118A  	fcall	___lltoft
  1154  04CD  0878               	movf	?___lltoft,w
  1155  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1156  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1157  04D0  00A0               	movwf	___ftdiv@f2
  1158  04D1  0879               	movf	?___lltoft+1,w
  1159  04D2  00A1               	movwf	___ftdiv@f2+1
  1160  04D3  087A               	movf	?___lltoft+2,w
  1161  04D4  00A2               	movwf	___ftdiv@f2+2
  1162  04D5  120A  118A  23E4  120A  118A  	fcall	___ftdiv
  1163  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1164  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1165  04DC  0820               	movf	?___ftdiv,w
  1166  04DD  00CF               	movwf	_uartInit$562
  1167  04DE  0821               	movf	?___ftdiv+1,w
  1168  04DF  00D0               	movwf	_uartInit$562+1
  1169  04E0  0822               	movf	?___ftdiv+2,w
  1170  04E1  00D1               	movwf	_uartInit$562+2
  1171                           
  1172                           ;uart.h: 30: SPBRG = (uInt) (((float) 8000000 / (float) baudrate / 16.0) - 0.5);
  1173  04E2  084F               	movf	_uartInit$562,w
  1174  04E3  00A3               	movwf	___ftdiv@f1
  1175  04E4  0850               	movf	_uartInit$562+1,w
  1176  04E5  00A4               	movwf	___ftdiv@f1+1
  1177  04E6  0851               	movf	_uartInit$562+2,w
  1178  04E7  00A5               	movwf	___ftdiv@f1+2
  1179  04E8  3000               	movlw	0
  1180  04E9  00A0               	movwf	___ftdiv@f2
  1181  04EA  3080               	movlw	128
  1182  04EB  00A1               	movwf	___ftdiv@f2+1
  1183  04EC  3041               	movlw	65
  1184  04ED  00A2               	movwf	___ftdiv@f2+2
  1185  04EE  120A  118A  23E4  120A  118A  	fcall	___ftdiv
  1186  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1187  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1188  04F5  0820               	movf	?___ftdiv,w
  1189  04F6  00B3               	movwf	___ftadd@f2
  1190  04F7  0821               	movf	?___ftdiv+1,w
  1191  04F8  00B4               	movwf	___ftadd@f2+1
  1192  04F9  0822               	movf	?___ftdiv+2,w
  1193  04FA  00B5               	movwf	___ftadd@f2+2
  1194  04FB  3000               	movlw	0
  1195  04FC  00B0               	movwf	___ftadd@f1
  1196  04FD  3000               	movlw	0
  1197  04FE  00B1               	movwf	___ftadd@f1+1
  1198  04FF  30BF               	movlw	191
  1199  0500  00B2               	movwf	___ftadd@f1+2
  1200  0501  120A  118A  258C  120A  118A  	fcall	___ftadd
  1201  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0508  0830               	movf	?___ftadd,w
  1204  0509  00BD               	movwf	___fttol@f1
  1205  050A  0831               	movf	?___ftadd+1,w
  1206  050B  00BE               	movwf	___fttol@f1+1
  1207  050C  0832               	movf	?___ftadd+2,w
  1208  050D  00BF               	movwf	___fttol@f1+2
  1209  050E  120A  118A  22C7   	fcall	___fttol
  1210  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0513  083D               	movf	?___fttol,w
  1213  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0516  0099               	movwf	25	;volatile
  1216                           
  1217                           ;uart.h: 31: }
  1218  0517  0008               	return
  1219  0518                     l1699:	
  1220                           
  1221                           ;uart.h: 32: else if(baudrate < 9000)
  1222  0518  3000               	movlw	0
  1223  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1224  051A  024E               	subwf	uartInit@baudrate+3,w
  1225  051B  1D03               	skipz
  1226  051C  2D27               	goto	u2115
  1227  051D  3000               	movlw	0
  1228  051E  024D               	subwf	uartInit@baudrate+2,w
  1229  051F  1D03               	skipz
  1230  0520  2D27               	goto	u2115
  1231  0521  3023               	movlw	35
  1232  0522  024C               	subwf	uartInit@baudrate+1,w
  1233  0523  1D03               	skipz
  1234  0524  2D27               	goto	u2115
  1235  0525  3028               	movlw	40
  1236  0526  024B               	subwf	uartInit@baudrate,w
  1237  0527                     u2115:	
  1238  0527  1803               	skipnc
  1239  0528  0008               	return
  1240                           
  1241                           ;uart.h: 33: {
  1242                           ;uart.h: 34: BRGH = 0;
  1243  0529  1683               	bsf	3,5	;RP0=1, select bank1
  1244  052A  1303               	bcf	3,6	;RP1=0, select bank1
  1245  052B  1118               	bcf	24,2	;volatile
  1246                           
  1247                           ;uart.h: 35: SPBRG = (uInt) (((float) 8000000 / (float) baudrate / 64.0) - 0.5);
  1248  052C  3024               	movlw	36
  1249  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1250  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1251  052F  00A3               	movwf	___ftdiv@f1
  1252  0530  30F4               	movlw	244
  1253  0531  00A4               	movwf	___ftdiv@f1+1
  1254  0532  304A               	movlw	74
  1255  0533  00A5               	movwf	___ftdiv@f1+2
  1256  0534  084E               	movf	uartInit@baudrate+3,w
  1257  0535  00FB               	movwf	___lltoft@c+3
  1258  0536  084D               	movf	uartInit@baudrate+2,w
  1259  0537  00FA               	movwf	___lltoft@c+2
  1260  0538  084C               	movf	uartInit@baudrate+1,w
  1261  0539  00F9               	movwf	___lltoft@c+1
  1262  053A  084B               	movf	uartInit@baudrate,w
  1263  053B  00F8               	movwf	___lltoft@c
  1264  053C  120A  158A  2711  120A  118A  	fcall	___lltoft
  1265  0541  0878               	movf	?___lltoft,w
  1266  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0544  00A0               	movwf	___ftdiv@f2
  1269  0545  0879               	movf	?___lltoft+1,w
  1270  0546  00A1               	movwf	___ftdiv@f2+1
  1271  0547  087A               	movf	?___lltoft+2,w
  1272  0548  00A2               	movwf	___ftdiv@f2+2
  1273  0549  120A  118A  23E4  120A  118A  	fcall	___ftdiv
  1274  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1275  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0550  0820               	movf	?___ftdiv,w
  1277  0551  00CF               	movwf	_uartInit$562
  1278  0552  0821               	movf	?___ftdiv+1,w
  1279  0553  00D0               	movwf	_uartInit$562+1
  1280  0554  0822               	movf	?___ftdiv+2,w
  1281  0555  00D1               	movwf	_uartInit$562+2
  1282                           
  1283                           ;uart.h: 35: SPBRG = (uInt) (((float) 8000000 / (float) baudrate / 64.0) - 0.5);
  1284  0556  084F               	movf	_uartInit$562,w
  1285  0557  00A3               	movwf	___ftdiv@f1
  1286  0558  0850               	movf	_uartInit$562+1,w
  1287  0559  00A4               	movwf	___ftdiv@f1+1
  1288  055A  0851               	movf	_uartInit$562+2,w
  1289  055B  00A5               	movwf	___ftdiv@f1+2
  1290  055C  3000               	movlw	0
  1291  055D  00A0               	movwf	___ftdiv@f2
  1292  055E  3080               	movlw	128
  1293  055F  00A1               	movwf	___ftdiv@f2+1
  1294  0560  3042               	movlw	66
  1295  0561  00A2               	movwf	___ftdiv@f2+2
  1296  0562  120A  118A  23E4  120A  118A  	fcall	___ftdiv
  1297  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0569  0820               	movf	?___ftdiv,w
  1300  056A  00B3               	movwf	___ftadd@f2
  1301  056B  0821               	movf	?___ftdiv+1,w
  1302  056C  00B4               	movwf	___ftadd@f2+1
  1303  056D  0822               	movf	?___ftdiv+2,w
  1304  056E  00B5               	movwf	___ftadd@f2+2
  1305  056F  3000               	movlw	0
  1306  0570  00B0               	movwf	___ftadd@f1
  1307  0571  3000               	movlw	0
  1308  0572  00B1               	movwf	___ftadd@f1+1
  1309  0573  30BF               	movlw	191
  1310  0574  00B2               	movwf	___ftadd@f1+2
  1311  0575  120A  118A  258C  120A  118A  	fcall	___ftadd
  1312  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1313  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1314  057C  0830               	movf	?___ftadd,w
  1315  057D  00BD               	movwf	___fttol@f1
  1316  057E  0831               	movf	?___ftadd+1,w
  1317  057F  00BE               	movwf	___fttol@f1+1
  1318  0580  0832               	movf	?___ftadd+2,w
  1319  0581  00BF               	movwf	___fttol@f1+2
  1320  0582  120A  118A  22C7   	fcall	___fttol
  1321  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0587  083D               	movf	?___fttol,w
  1324  0588  1683               	bsf	3,5	;RP0=1, select bank1
  1325  0589  1303               	bcf	3,6	;RP1=0, select bank1
  1326  058A  0099               	movwf	25	;volatile
  1327  058B  0008               	return
  1328  058C                     __end_of_uartInit:	
  1329                           
  1330                           	psect	text3
  1331  0F11                     __ptext3:	
  1332 ;; *************** function ___lltoft *****************
  1333 ;; Defined at:
  1334 ;;		line 35 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\lltoft.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  c               4    8[COMMON] unsigned long 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  exp             1   13[COMMON] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  3    8[COMMON] float 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         4       0       0       0       0
  1349 ;;      Locals:         1       0       0       0       0
  1350 ;;      Temps:          1       0       0       0       0
  1351 ;;      Totals:         6       0       0       0       0
  1352 ;;Total ram usage:        6 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    1
  1355 ;; This function calls:
  1356 ;;		___ftpack
  1357 ;; This function is called by:
  1358 ;;		_uartInit
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function ___lltoft
  1364  0F11                     ___lltoft:	
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  1368  0F11  308E               	movlw	142
  1369  0F12  00FC               	movwf	??___lltoft
  1370  0F13  087C               	movf	??___lltoft,w
  1371  0F14  00FD               	movwf	___lltoft@exp
  1372  0F15                     l1643:	
  1373  0F15  30FF               	movlw	255
  1374  0F16  057B               	andwf	___lltoft@c+3,w
  1375  0F17  1903               	btfsc	3,2
  1376  0F18  2F27               	goto	l1645
  1377  0F19  3001               	movlw	1
  1378  0F1A                     u2065:	
  1379  0F1A  1003               	clrc
  1380  0F1B  0CFB               	rrf	___lltoft@c+3,f
  1381  0F1C  0CFA               	rrf	___lltoft@c+2,f
  1382  0F1D  0CF9               	rrf	___lltoft@c+1,f
  1383  0F1E  0CF8               	rrf	___lltoft@c,f
  1384  0F1F  3EFF               	addlw	-1
  1385  0F20  1D03               	skipz
  1386  0F21  2F1A               	goto	u2065
  1387  0F22  3001               	movlw	1
  1388  0F23  00FC               	movwf	??___lltoft
  1389  0F24  087C               	movf	??___lltoft,w
  1390  0F25  07FD               	addwf	___lltoft@exp,f
  1391  0F26  2F15               	goto	l1643
  1392  0F27                     l1645:	
  1393  0F27  0878               	movf	___lltoft@c,w
  1394  0F28  00F0               	movwf	___ftpack@arg
  1395  0F29  0879               	movf	___lltoft@c+1,w
  1396  0F2A  00F1               	movwf	___ftpack@arg+1
  1397  0F2B  087A               	movf	___lltoft@c+2,w
  1398  0F2C  00F2               	movwf	___ftpack@arg+2
  1399  0F2D  087D               	movf	___lltoft@exp,w
  1400  0F2E  00FC               	movwf	??___lltoft
  1401  0F2F  087C               	movf	??___lltoft,w
  1402  0F30  00F3               	movwf	___ftpack@exp
  1403  0F31  01F4               	clrf	___ftpack@sign
  1404  0F32  120A  118A  2109   	fcall	___ftpack
  1405  0F35  0870               	movf	?___ftpack,w
  1406  0F36  00F8               	movwf	?___lltoft
  1407  0F37  0871               	movf	?___ftpack+1,w
  1408  0F38  00F9               	movwf	?___lltoft+1
  1409  0F39  0872               	movf	?___ftpack+2,w
  1410  0F3A  00FA               	movwf	?___lltoft+2
  1411  0F3B  0008               	return
  1412  0F3C                     __end_of___lltoft:	
  1413                           
  1414                           	psect	text4
  1415  02C7                     __ptext4:	
  1416 ;; *************** function ___fttol *****************
  1417 ;; Defined at:
  1418 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\fttol.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  f1              3   29[BANK0 ] float 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  lval            4   38[BANK0 ] unsigned long 
  1423 ;;  exp1            1   42[BANK0 ] unsigned char 
  1424 ;;  sign1           1   37[BANK0 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  4   29[BANK0 ] long 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       4       0       0       0
  1435 ;;      Locals:         0       6       0       0       0
  1436 ;;      Temps:          0       4       0       0       0
  1437 ;;      Totals:         0      14       0       0       0
  1438 ;;Total ram usage:       14 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_uartInit
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function ___fttol
  1449  02C7                     ___fttol:	
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1453  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1454  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1455  02C9  083D               	movf	___fttol@f1,w
  1456  02CA  00C1               	movwf	??___fttol
  1457  02CB  083E               	movf	___fttol@f1+1,w
  1458  02CC  00C2               	movwf	??___fttol+1
  1459  02CD  083F               	movf	___fttol@f1+2,w
  1460  02CE  00C3               	movwf	??___fttol+2
  1461  02CF  1003               	clrc
  1462  02D0  0D42               	rlf	??___fttol+1,w
  1463  02D1  0D43               	rlf	??___fttol+2,w
  1464  02D2  00C4               	movwf	??___fttol+3
  1465  02D3  0844               	movf	??___fttol+3,w
  1466  02D4  00CA               	movwf	___fttol@exp1
  1467  02D5  08CA               	movf	___fttol@exp1,f
  1468  02D6  1D03               	skipz
  1469  02D7  2AE1               	goto	l1601
  1470  02D8  3000               	movlw	0
  1471  02D9  00C0               	movwf	?___fttol+3
  1472  02DA  3000               	movlw	0
  1473  02DB  00BF               	movwf	?___fttol+2
  1474  02DC  3000               	movlw	0
  1475  02DD  00BE               	movwf	?___fttol+1
  1476  02DE  3000               	movlw	0
  1477  02DF  00BD               	movwf	?___fttol
  1478  02E0  0008               	return
  1479  02E1                     l1601:	
  1480  02E1  083D               	movf	___fttol@f1,w
  1481  02E2  00C1               	movwf	??___fttol
  1482  02E3  083E               	movf	___fttol@f1+1,w
  1483  02E4  00C2               	movwf	??___fttol+1
  1484  02E5  083F               	movf	___fttol@f1+2,w
  1485  02E6  00C3               	movwf	??___fttol+2
  1486  02E7  3017               	movlw	23
  1487  02E8                     u1975:	
  1488  02E8  1003               	clrc
  1489  02E9  0CC3               	rrf	??___fttol+2,f
  1490  02EA  0CC2               	rrf	??___fttol+1,f
  1491  02EB  0CC1               	rrf	??___fttol,f
  1492  02EC  3EFF               	addlw	-1
  1493  02ED  1D03               	skipz
  1494  02EE  2AE8               	goto	u1975
  1495  02EF  0841               	movf	??___fttol,w
  1496  02F0  00C4               	movwf	??___fttol+3
  1497  02F1  0844               	movf	??___fttol+3,w
  1498  02F2  00C5               	movwf	___fttol@sign1
  1499  02F3  17BE               	bsf	___fttol@f1+1,7
  1500  02F4  30FF               	movlw	255
  1501  02F5  05BD               	andwf	___fttol@f1,f
  1502  02F6  30FF               	movlw	255
  1503  02F7  05BE               	andwf	___fttol@f1+1,f
  1504  02F8  3000               	movlw	0
  1505  02F9  05BF               	andwf	___fttol@f1+2,f
  1506  02FA  083D               	movf	___fttol@f1,w
  1507  02FB  00C6               	movwf	___fttol@lval
  1508  02FC  083E               	movf	___fttol@f1+1,w
  1509  02FD  00C7               	movwf	___fttol@lval+1
  1510  02FE  083F               	movf	___fttol@f1+2,w
  1511  02FF  00C8               	movwf	___fttol@lval+2
  1512  0300  01C9               	clrf	___fttol@lval+3
  1513  0301  308E               	movlw	142
  1514  0302  02CA               	subwf	___fttol@exp1,f
  1515  0303  1FCA               	btfss	___fttol@exp1,7
  1516  0304  2B23               	goto	l1621
  1517  0305  084A               	movf	___fttol@exp1,w
  1518  0306  3A80               	xorlw	128
  1519  0307  3E8F               	addlw	143
  1520  0308  1803               	skipnc
  1521  0309  2B13               	goto	l1619
  1522  030A  3000               	movlw	0
  1523  030B  00C0               	movwf	?___fttol+3
  1524  030C  3000               	movlw	0
  1525  030D  00BF               	movwf	?___fttol+2
  1526  030E  3000               	movlw	0
  1527  030F  00BE               	movwf	?___fttol+1
  1528  0310  3000               	movlw	0
  1529  0311  00BD               	movwf	?___fttol
  1530  0312  0008               	return
  1531  0313                     l1619:	
  1532  0313  3001               	movlw	1
  1533  0314                     u2005:	
  1534  0314  1003               	clrc
  1535  0315  0CC9               	rrf	___fttol@lval+3,f
  1536  0316  0CC8               	rrf	___fttol@lval+2,f
  1537  0317  0CC7               	rrf	___fttol@lval+1,f
  1538  0318  0CC6               	rrf	___fttol@lval,f
  1539  0319  3EFF               	addlw	-1
  1540  031A  1D03               	skipz
  1541  031B  2B14               	goto	u2005
  1542  031C  3001               	movlw	1
  1543  031D  00C1               	movwf	??___fttol
  1544  031E  0841               	movf	??___fttol,w
  1545  031F  07CA               	addwf	___fttol@exp1,f
  1546  0320  1903               	btfsc	3,2
  1547  0321  2B3E               	goto	l1631
  1548  0322  2B13               	goto	l1619
  1549  0323                     l1621:	
  1550  0323  3018               	movlw	24
  1551  0324  024A               	subwf	___fttol@exp1,w
  1552  0325  1C03               	skipc
  1553  0326  2B3B               	goto	l1629
  1554  0327  3000               	movlw	0
  1555  0328  00C0               	movwf	?___fttol+3
  1556  0329  3000               	movlw	0
  1557  032A  00BF               	movwf	?___fttol+2
  1558  032B  3000               	movlw	0
  1559  032C  00BE               	movwf	?___fttol+1
  1560  032D  3000               	movlw	0
  1561  032E  00BD               	movwf	?___fttol
  1562  032F  0008               	return
  1563  0330                     l1627:	
  1564  0330  3001               	movlw	1
  1565  0331  00C1               	movwf	??___fttol
  1566  0332                     u2035:	
  1567  0332  1003               	clrc
  1568  0333  0DC6               	rlf	___fttol@lval,f
  1569  0334  0DC7               	rlf	___fttol@lval+1,f
  1570  0335  0DC8               	rlf	___fttol@lval+2,f
  1571  0336  0DC9               	rlf	___fttol@lval+3,f
  1572  0337  0BC1               	decfsz	??___fttol,f
  1573  0338  2B32               	goto	u2035
  1574  0339  3001               	movlw	1
  1575  033A  02CA               	subwf	___fttol@exp1,f
  1576  033B                     l1629:	
  1577  033B  08CA               	movf	___fttol@exp1,f
  1578  033C  1D03               	skipz
  1579  033D  2B30               	goto	l1627
  1580  033E                     l1631:	
  1581  033E  0845               	movf	___fttol@sign1,w
  1582  033F  1903               	btfsc	3,2
  1583  0340  2B4C               	goto	l1635
  1584  0341  09C6               	comf	___fttol@lval,f
  1585  0342  09C7               	comf	___fttol@lval+1,f
  1586  0343  09C8               	comf	___fttol@lval+2,f
  1587  0344  09C9               	comf	___fttol@lval+3,f
  1588  0345  0AC6               	incf	___fttol@lval,f
  1589  0346  1903               	skipnz
  1590  0347  0AC7               	incf	___fttol@lval+1,f
  1591  0348  1903               	skipnz
  1592  0349  0AC8               	incf	___fttol@lval+2,f
  1593  034A  1903               	skipnz
  1594  034B  0AC9               	incf	___fttol@lval+3,f
  1595  034C                     l1635:	
  1596  034C  0849               	movf	___fttol@lval+3,w
  1597  034D  00C0               	movwf	?___fttol+3
  1598  034E  0848               	movf	___fttol@lval+2,w
  1599  034F  00BF               	movwf	?___fttol+2
  1600  0350  0847               	movf	___fttol@lval+1,w
  1601  0351  00BE               	movwf	?___fttol+1
  1602  0352  0846               	movf	___fttol@lval,w
  1603  0353  00BD               	movwf	?___fttol
  1604  0354  0008               	return
  1605  0355                     __end_of___fttol:	
  1606                           
  1607                           	psect	text5
  1608  03E4                     __ptext5:	
  1609 ;; *************** function ___ftdiv *****************
  1610 ;; Defined at:
  1611 ;;		line 49 in file "D:\Program Files\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  f2              3    0[BANK0 ] float 
  1614 ;;  f1              3    3[BANK0 ] float 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  f3              3   11[BANK0 ] float 
  1617 ;;  sign            1   15[BANK0 ] unsigned char 
  1618 ;;  exp             1   14[BANK0 ] unsigned char 
  1619 ;;  cntr            1   10[BANK0 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  3    0[BANK0 ] float 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       6       0       0       0
  1630 ;;      Locals:         0       6       0       0       0
  1631 ;;      Temps:          0       4       0       0       0
  1632 ;;      Totals:         0      16       0       0       0
  1633 ;;Total ram usage:       16 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    1
  1636 ;; This function calls:
  1637 ;;		___ftpack
  1638 ;; This function is called by:
  1639 ;;		_uartInit
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function ___ftdiv
  1645  03E4                     ___ftdiv:	
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1649  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1650  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1651  03E6  0823               	movf	___ftdiv@f1,w
  1652  03E7  00A6               	movwf	??___ftdiv
  1653  03E8  0824               	movf	___ftdiv@f1+1,w
  1654  03E9  00A7               	movwf	??___ftdiv+1
  1655  03EA  0825               	movf	___ftdiv@f1+2,w
  1656  03EB  00A8               	movwf	??___ftdiv+2
  1657  03EC  1003               	clrc
  1658  03ED  0D27               	rlf	??___ftdiv+1,w
  1659  03EE  0D28               	rlf	??___ftdiv+2,w
  1660  03EF  00A9               	movwf	??___ftdiv+3
  1661  03F0  0829               	movf	??___ftdiv+3,w
  1662  03F1  00AE               	movwf	___ftdiv@exp
  1663  03F2  08AE               	movf	___ftdiv@exp,f
  1664  03F3  1D03               	skipz
  1665  03F4  2BFC               	goto	l1559
  1666  03F5  3000               	movlw	0
  1667  03F6  00A0               	movwf	?___ftdiv
  1668  03F7  3000               	movlw	0
  1669  03F8  00A1               	movwf	?___ftdiv+1
  1670  03F9  3000               	movlw	0
  1671  03FA  00A2               	movwf	?___ftdiv+2
  1672  03FB  0008               	return
  1673  03FC                     l1559:	
  1674  03FC  0820               	movf	___ftdiv@f2,w
  1675  03FD  00A6               	movwf	??___ftdiv
  1676  03FE  0821               	movf	___ftdiv@f2+1,w
  1677  03FF  00A7               	movwf	??___ftdiv+1
  1678  0400  0822               	movf	___ftdiv@f2+2,w
  1679  0401  00A8               	movwf	??___ftdiv+2
  1680  0402  1003               	clrc
  1681  0403  0D27               	rlf	??___ftdiv+1,w
  1682  0404  0D28               	rlf	??___ftdiv+2,w
  1683  0405  00A9               	movwf	??___ftdiv+3
  1684  0406  0829               	movf	??___ftdiv+3,w
  1685  0407  00AF               	movwf	___ftdiv@sign
  1686  0408  08AF               	movf	___ftdiv@sign,f
  1687  0409  1D03               	skipz
  1688  040A  2C12               	goto	l1565
  1689  040B  3000               	movlw	0
  1690  040C  00A0               	movwf	?___ftdiv
  1691  040D  3000               	movlw	0
  1692  040E  00A1               	movwf	?___ftdiv+1
  1693  040F  3000               	movlw	0
  1694  0410  00A2               	movwf	?___ftdiv+2
  1695  0411  0008               	return
  1696  0412                     l1565:	
  1697  0412  3000               	movlw	0
  1698  0413  00AB               	movwf	___ftdiv@f3
  1699  0414  3000               	movlw	0
  1700  0415  00AC               	movwf	___ftdiv@f3+1
  1701  0416  3000               	movlw	0
  1702  0417  00AD               	movwf	___ftdiv@f3+2
  1703  0418  3089               	movlw	137
  1704  0419  072F               	addwf	___ftdiv@sign,w
  1705  041A  00A6               	movwf	??___ftdiv
  1706  041B  0826               	movf	??___ftdiv,w
  1707  041C  02AE               	subwf	___ftdiv@exp,f
  1708  041D  0823               	movf	___ftdiv@f1,w
  1709  041E  00A6               	movwf	??___ftdiv
  1710  041F  0824               	movf	___ftdiv@f1+1,w
  1711  0420  00A7               	movwf	??___ftdiv+1
  1712  0421  0825               	movf	___ftdiv@f1+2,w
  1713  0422  00A8               	movwf	??___ftdiv+2
  1714  0423  3010               	movlw	16
  1715  0424                     u1905:	
  1716  0424  1003               	clrc
  1717  0425  0CA8               	rrf	??___ftdiv+2,f
  1718  0426  0CA7               	rrf	??___ftdiv+1,f
  1719  0427  0CA6               	rrf	??___ftdiv,f
  1720  0428  3EFF               	addlw	-1
  1721  0429  1D03               	skipz
  1722  042A  2C24               	goto	u1905
  1723  042B  0826               	movf	??___ftdiv,w
  1724  042C  00A9               	movwf	??___ftdiv+3
  1725  042D  0829               	movf	??___ftdiv+3,w
  1726  042E  00AF               	movwf	___ftdiv@sign
  1727  042F  0820               	movf	___ftdiv@f2,w
  1728  0430  00A6               	movwf	??___ftdiv
  1729  0431  0821               	movf	___ftdiv@f2+1,w
  1730  0432  00A7               	movwf	??___ftdiv+1
  1731  0433  0822               	movf	___ftdiv@f2+2,w
  1732  0434  00A8               	movwf	??___ftdiv+2
  1733  0435  3010               	movlw	16
  1734  0436                     u1915:	
  1735  0436  1003               	clrc
  1736  0437  0CA8               	rrf	??___ftdiv+2,f
  1737  0438  0CA7               	rrf	??___ftdiv+1,f
  1738  0439  0CA6               	rrf	??___ftdiv,f
  1739  043A  3EFF               	addlw	-1
  1740  043B  1D03               	skipz
  1741  043C  2C36               	goto	u1915
  1742  043D  0826               	movf	??___ftdiv,w
  1743  043E  00A9               	movwf	??___ftdiv+3
  1744  043F  0829               	movf	??___ftdiv+3,w
  1745  0440  06AF               	xorwf	___ftdiv@sign,f
  1746  0441  3080               	movlw	128
  1747  0442  00A6               	movwf	??___ftdiv
  1748  0443  0826               	movf	??___ftdiv,w
  1749  0444  05AF               	andwf	___ftdiv@sign,f
  1750  0445  17A4               	bsf	___ftdiv@f1+1,7
  1751  0446  30FF               	movlw	255
  1752  0447  05A3               	andwf	___ftdiv@f1,f
  1753  0448  30FF               	movlw	255
  1754  0449  05A4               	andwf	___ftdiv@f1+1,f
  1755  044A  3000               	movlw	0
  1756  044B  05A5               	andwf	___ftdiv@f1+2,f
  1757  044C  17A1               	bsf	___ftdiv@f2+1,7
  1758  044D  30FF               	movlw	255
  1759  044E  05A0               	andwf	___ftdiv@f2,f
  1760  044F  30FF               	movlw	255
  1761  0450  05A1               	andwf	___ftdiv@f2+1,f
  1762  0451  3000               	movlw	0
  1763  0452  05A2               	andwf	___ftdiv@f2+2,f
  1764  0453  3018               	movlw	24
  1765  0454  00A6               	movwf	??___ftdiv
  1766  0455  0826               	movf	??___ftdiv,w
  1767  0456  00AA               	movwf	___ftdiv@cntr
  1768  0457                     l1579:	
  1769  0457  3001               	movlw	1
  1770  0458                     u1925:	
  1771  0458  1003               	clrc
  1772  0459  0DAB               	rlf	___ftdiv@f3,f
  1773  045A  0DAC               	rlf	___ftdiv@f3+1,f
  1774  045B  0DAD               	rlf	___ftdiv@f3+2,f
  1775  045C  3EFF               	addlw	-1
  1776  045D  1D03               	skipz
  1777  045E  2C58               	goto	u1925
  1778  045F  0822               	movf	___ftdiv@f2+2,w
  1779  0460  0225               	subwf	___ftdiv@f1+2,w
  1780  0461  1D03               	skipz
  1781  0462  2C69               	goto	u1935
  1782  0463  0821               	movf	___ftdiv@f2+1,w
  1783  0464  0224               	subwf	___ftdiv@f1+1,w
  1784  0465  1D03               	skipz
  1785  0466  2C69               	goto	u1935
  1786  0467  0820               	movf	___ftdiv@f2,w
  1787  0468  0223               	subwf	___ftdiv@f1,w
  1788  0469                     u1935:	
  1789  0469  1C03               	skipc
  1790  046A  2C76               	goto	l1587
  1791  046B  0820               	movf	___ftdiv@f2,w
  1792  046C  02A3               	subwf	___ftdiv@f1,f
  1793  046D  0821               	movf	___ftdiv@f2+1,w
  1794  046E  1C03               	skipc
  1795  046F  0F21               	incfsz	___ftdiv@f2+1,w
  1796  0470  02A4               	subwf	___ftdiv@f1+1,f
  1797  0471  0822               	movf	___ftdiv@f2+2,w
  1798  0472  1C03               	skipc
  1799  0473  0A22               	incf	___ftdiv@f2+2,w
  1800  0474  02A5               	subwf	___ftdiv@f1+2,f
  1801  0475  142B               	bsf	___ftdiv@f3,0
  1802  0476                     l1587:	
  1803  0476  3001               	movlw	1
  1804  0477                     u1945:	
  1805  0477  1003               	clrc
  1806  0478  0DA3               	rlf	___ftdiv@f1,f
  1807  0479  0DA4               	rlf	___ftdiv@f1+1,f
  1808  047A  0DA5               	rlf	___ftdiv@f1+2,f
  1809  047B  3EFF               	addlw	-1
  1810  047C  1D03               	skipz
  1811  047D  2C77               	goto	u1945
  1812  047E  3001               	movlw	1
  1813  047F  02AA               	subwf	___ftdiv@cntr,f
  1814  0480  1D03               	btfss	3,2
  1815  0481  2C57               	goto	l1579
  1816  0482  082B               	movf	___ftdiv@f3,w
  1817  0483  00F0               	movwf	___ftpack@arg
  1818  0484  082C               	movf	___ftdiv@f3+1,w
  1819  0485  00F1               	movwf	___ftpack@arg+1
  1820  0486  082D               	movf	___ftdiv@f3+2,w
  1821  0487  00F2               	movwf	___ftpack@arg+2
  1822  0488  082E               	movf	___ftdiv@exp,w
  1823  0489  00A6               	movwf	??___ftdiv
  1824  048A  0826               	movf	??___ftdiv,w
  1825  048B  00F3               	movwf	___ftpack@exp
  1826  048C  082F               	movf	___ftdiv@sign,w
  1827  048D  00A7               	movwf	??___ftdiv+1
  1828  048E  0827               	movf	??___ftdiv+1,w
  1829  048F  00F4               	movwf	___ftpack@sign
  1830  0490  120A  118A  2109   	fcall	___ftpack
  1831  0493  0870               	movf	?___ftpack,w
  1832  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0496  00A0               	movwf	?___ftdiv
  1835  0497  0871               	movf	?___ftpack+1,w
  1836  0498  00A1               	movwf	?___ftdiv+1
  1837  0499  0872               	movf	?___ftpack+2,w
  1838  049A  00A2               	movwf	?___ftdiv+2
  1839  049B  0008               	return
  1840  049C                     __end_of___ftdiv:	
  1841                           
  1842                           	psect	text6
  1843  058C                     __ptext6:	
  1844 ;; *************** function ___ftadd *****************
  1845 ;; Defined at:
  1846 ;;		line 86 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\ftadd.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  f1              3   16[BANK0 ] float 
  1849 ;;  f2              3   19[BANK0 ] float 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  exp1            1   28[BANK0 ] unsigned char 
  1852 ;;  exp2            1   27[BANK0 ] unsigned char 
  1853 ;;  sign            1   26[BANK0 ] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  3   16[BANK0 ] float 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       6       0       0       0
  1864 ;;      Locals:         0       3       0       0       0
  1865 ;;      Temps:          0       4       0       0       0
  1866 ;;      Totals:         0      13       0       0       0
  1867 ;;Total ram usage:       13 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		___ftpack
  1872 ;; This function is called by:
  1873 ;;		_uartInit
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function ___ftadd
  1879  058C                     ___ftadd:	
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1883  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1884  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1885  058E  0830               	movf	___ftadd@f1,w
  1886  058F  00B6               	movwf	??___ftadd
  1887  0590  0831               	movf	___ftadd@f1+1,w
  1888  0591  00B7               	movwf	??___ftadd+1
  1889  0592  0832               	movf	___ftadd@f1+2,w
  1890  0593  00B8               	movwf	??___ftadd+2
  1891  0594  1003               	clrc
  1892  0595  0D37               	rlf	??___ftadd+1,w
  1893  0596  0D38               	rlf	??___ftadd+2,w
  1894  0597  00B9               	movwf	??___ftadd+3
  1895  0598  0839               	movf	??___ftadd+3,w
  1896  0599  00BC               	movwf	___ftadd@exp1
  1897  059A  0833               	movf	___ftadd@f2,w
  1898  059B  00B6               	movwf	??___ftadd
  1899  059C  0834               	movf	___ftadd@f2+1,w
  1900  059D  00B7               	movwf	??___ftadd+1
  1901  059E  0835               	movf	___ftadd@f2+2,w
  1902  059F  00B8               	movwf	??___ftadd+2
  1903  05A0  1003               	clrc
  1904  05A1  0D37               	rlf	??___ftadd+1,w
  1905  05A2  0D38               	rlf	??___ftadd+2,w
  1906  05A3  00B9               	movwf	??___ftadd+3
  1907  05A4  0839               	movf	??___ftadd+3,w
  1908  05A5  00BB               	movwf	___ftadd@exp2
  1909  05A6  083C               	movf	___ftadd@exp1,w
  1910  05A7  1903               	btfsc	3,2
  1911  05A8  2DB5               	goto	l1489
  1912  05A9  083B               	movf	___ftadd@exp2,w
  1913  05AA  023C               	subwf	___ftadd@exp1,w
  1914  05AB  1803               	skipnc
  1915  05AC  2DBC               	goto	l1493
  1916  05AD  033C               	decf	___ftadd@exp1,w
  1917  05AE  3AFF               	xorlw	255
  1918  05AF  073B               	addwf	___ftadd@exp2,w
  1919  05B0  00B6               	movwf	??___ftadd
  1920  05B1  3019               	movlw	25
  1921  05B2  0236               	subwf	??___ftadd,w
  1922  05B3  1C03               	skipc
  1923  05B4  2DBC               	goto	l1493
  1924  05B5                     l1489:	
  1925  05B5  0833               	movf	___ftadd@f2,w
  1926  05B6  00B0               	movwf	?___ftadd
  1927  05B7  0834               	movf	___ftadd@f2+1,w
  1928  05B8  00B1               	movwf	?___ftadd+1
  1929  05B9  0835               	movf	___ftadd@f2+2,w
  1930  05BA  00B2               	movwf	?___ftadd+2
  1931  05BB  0008               	return
  1932  05BC                     l1493:	
  1933  05BC  083B               	movf	___ftadd@exp2,w
  1934  05BD  1903               	btfsc	3,2
  1935  05BE  0008               	return
  1936  05BF  083C               	movf	___ftadd@exp1,w
  1937  05C0  023B               	subwf	___ftadd@exp2,w
  1938  05C1  1803               	skipnc
  1939  05C2  2DCB               	goto	l1499
  1940  05C3  033B               	decf	___ftadd@exp2,w
  1941  05C4  3AFF               	xorlw	255
  1942  05C5  073C               	addwf	___ftadd@exp1,w
  1943  05C6  00B6               	movwf	??___ftadd
  1944  05C7  3019               	movlw	25
  1945  05C8  0236               	subwf	??___ftadd,w
  1946  05C9  1803               	btfsc	3,0
  1947  05CA  0008               	return
  1948  05CB                     l1499:	
  1949  05CB  3006               	movlw	6
  1950  05CC  00B6               	movwf	??___ftadd
  1951  05CD  0836               	movf	??___ftadd,w
  1952  05CE  00BA               	movwf	___ftadd@sign
  1953  05CF  1BB2               	btfsc	___ftadd@f1+2,7
  1954  05D0  17BA               	bsf	___ftadd@sign,7
  1955  05D1  1BB5               	btfsc	___ftadd@f2+2,7
  1956  05D2  173A               	bsf	___ftadd@sign,6
  1957  05D3  17B1               	bsf	___ftadd@f1+1,7
  1958  05D4  30FF               	movlw	255
  1959  05D5  05B0               	andwf	___ftadd@f1,f
  1960  05D6  30FF               	movlw	255
  1961  05D7  05B1               	andwf	___ftadd@f1+1,f
  1962  05D8  3000               	movlw	0
  1963  05D9  05B2               	andwf	___ftadd@f1+2,f
  1964  05DA  17B4               	bsf	___ftadd@f2+1,7
  1965  05DB  30FF               	movlw	255
  1966  05DC  05B3               	andwf	___ftadd@f2,f
  1967  05DD  30FF               	movlw	255
  1968  05DE  05B4               	andwf	___ftadd@f2+1,f
  1969  05DF  3000               	movlw	0
  1970  05E0  05B5               	andwf	___ftadd@f2+2,f
  1971  05E1  083B               	movf	___ftadd@exp2,w
  1972  05E2  023C               	subwf	___ftadd@exp1,w
  1973  05E3  1803               	skipnc
  1974  05E4  2E0B               	goto	l1521
  1975  05E5                     l1511:	
  1976  05E5  3001               	movlw	1
  1977  05E6                     u1735:	
  1978  05E6  1003               	clrc
  1979  05E7  0DB3               	rlf	___ftadd@f2,f
  1980  05E8  0DB4               	rlf	___ftadd@f2+1,f
  1981  05E9  0DB5               	rlf	___ftadd@f2+2,f
  1982  05EA  3EFF               	addlw	-1
  1983  05EB  1D03               	skipz
  1984  05EC  2DE6               	goto	u1735
  1985  05ED  3001               	movlw	1
  1986  05EE  02BB               	subwf	___ftadd@exp2,f
  1987  05EF  083B               	movf	___ftadd@exp2,w
  1988  05F0  063C               	xorwf	___ftadd@exp1,w
  1989  05F1  1903               	skipnz
  1990  05F2  2E06               	goto	l1519
  1991  05F3  3001               	movlw	1
  1992  05F4  02BA               	subwf	___ftadd@sign,f
  1993  05F5  083A               	movf	___ftadd@sign,w
  1994  05F6  3907               	andlw	7
  1995  05F7  1903               	btfsc	3,2
  1996  05F8  2E06               	goto	l1519
  1997  05F9  2DE5               	goto	l1511
  1998  05FA                     l1517:	
  1999  05FA  3001               	movlw	1
  2000  05FB                     u1765:	
  2001  05FB  1003               	clrc
  2002  05FC  0CB2               	rrf	___ftadd@f1+2,f
  2003  05FD  0CB1               	rrf	___ftadd@f1+1,f
  2004  05FE  0CB0               	rrf	___ftadd@f1,f
  2005  05FF  3EFF               	addlw	-1
  2006  0600  1D03               	skipz
  2007  0601  2DFB               	goto	u1765
  2008  0602  3001               	movlw	1
  2009  0603  00B6               	movwf	??___ftadd
  2010  0604  0836               	movf	??___ftadd,w
  2011  0605  07BC               	addwf	___ftadd@exp1,f
  2012  0606                     l1519:	
  2013  0606  083C               	movf	___ftadd@exp1,w
  2014  0607  063B               	xorwf	___ftadd@exp2,w
  2015  0608  1903               	btfsc	3,2
  2016  0609  2E34               	goto	l484
  2017  060A  2DFA               	goto	l1517
  2018  060B                     l1521:	
  2019  060B  083C               	movf	___ftadd@exp1,w
  2020  060C  023B               	subwf	___ftadd@exp2,w
  2021  060D  1803               	skipnc
  2022  060E  2E34               	goto	l484
  2023  060F                     l1523:	
  2024  060F  3001               	movlw	1
  2025  0610                     u1795:	
  2026  0610  1003               	clrc
  2027  0611  0DB0               	rlf	___ftadd@f1,f
  2028  0612  0DB1               	rlf	___ftadd@f1+1,f
  2029  0613  0DB2               	rlf	___ftadd@f1+2,f
  2030  0614  3EFF               	addlw	-1
  2031  0615  1D03               	skipz
  2032  0616  2E10               	goto	u1795
  2033  0617  3001               	movlw	1
  2034  0618  02BC               	subwf	___ftadd@exp1,f
  2035  0619  083B               	movf	___ftadd@exp2,w
  2036  061A  063C               	xorwf	___ftadd@exp1,w
  2037  061B  1903               	skipnz
  2038  061C  2E30               	goto	l1531
  2039  061D  3001               	movlw	1
  2040  061E  02BA               	subwf	___ftadd@sign,f
  2041  061F  083A               	movf	___ftadd@sign,w
  2042  0620  3907               	andlw	7
  2043  0621  1903               	btfsc	3,2
  2044  0622  2E30               	goto	l1531
  2045  0623  2E0F               	goto	l1523
  2046  0624                     l1529:	
  2047  0624  3001               	movlw	1
  2048  0625                     u1825:	
  2049  0625  1003               	clrc
  2050  0626  0CB5               	rrf	___ftadd@f2+2,f
  2051  0627  0CB4               	rrf	___ftadd@f2+1,f
  2052  0628  0CB3               	rrf	___ftadd@f2,f
  2053  0629  3EFF               	addlw	-1
  2054  062A  1D03               	skipz
  2055  062B  2E25               	goto	u1825
  2056  062C  3001               	movlw	1
  2057  062D  00B6               	movwf	??___ftadd
  2058  062E  0836               	movf	??___ftadd,w
  2059  062F  07BB               	addwf	___ftadd@exp2,f
  2060  0630                     l1531:	
  2061  0630  083C               	movf	___ftadd@exp1,w
  2062  0631  063B               	xorwf	___ftadd@exp2,w
  2063  0632  1D03               	skipz
  2064  0633  2E24               	goto	l1529
  2065  0634                     l484:	
  2066  0634  1FBA               	btfss	___ftadd@sign,7
  2067  0635  2E46               	goto	l1535
  2068  0636  30FF               	movlw	255
  2069  0637  06B0               	xorwf	___ftadd@f1,f
  2070  0638  30FF               	movlw	255
  2071  0639  06B1               	xorwf	___ftadd@f1+1,f
  2072  063A  30FF               	movlw	255
  2073  063B  06B2               	xorwf	___ftadd@f1+2,f
  2074  063C  3001               	movlw	1
  2075  063D  07B0               	addwf	___ftadd@f1,f
  2076  063E  3000               	movlw	0
  2077  063F  1803               	skipnc
  2078  0640  3001               	movlw	1
  2079  0641  07B1               	addwf	___ftadd@f1+1,f
  2080  0642  3000               	movlw	0
  2081  0643  1803               	skipnc
  2082  0644  3001               	movlw	1
  2083  0645  07B2               	addwf	___ftadd@f1+2,f
  2084  0646                     l1535:	
  2085  0646  1F3A               	btfss	___ftadd@sign,6
  2086  0647  2E58               	goto	l1539
  2087  0648  30FF               	movlw	255
  2088  0649  06B3               	xorwf	___ftadd@f2,f
  2089  064A  30FF               	movlw	255
  2090  064B  06B4               	xorwf	___ftadd@f2+1,f
  2091  064C  30FF               	movlw	255
  2092  064D  06B5               	xorwf	___ftadd@f2+2,f
  2093  064E  3001               	movlw	1
  2094  064F  07B3               	addwf	___ftadd@f2,f
  2095  0650  3000               	movlw	0
  2096  0651  1803               	skipnc
  2097  0652  3001               	movlw	1
  2098  0653  07B4               	addwf	___ftadd@f2+1,f
  2099  0654  3000               	movlw	0
  2100  0655  1803               	skipnc
  2101  0656  3001               	movlw	1
  2102  0657  07B5               	addwf	___ftadd@f2+2,f
  2103  0658                     l1539:	
  2104  0658  01BA               	clrf	___ftadd@sign
  2105  0659  0830               	movf	___ftadd@f1,w
  2106  065A  07B3               	addwf	___ftadd@f2,f
  2107  065B  0831               	movf	___ftadd@f1+1,w
  2108  065C  1103               	clrz
  2109  065D  1803               	skipnc
  2110  065E  0A31               	incf	___ftadd@f1+1,w
  2111  065F  1D03               	btfss	3,2
  2112  0660  07B4               	addwf	___ftadd@f2+1,f
  2113  0661  0832               	movf	___ftadd@f1+2,w
  2114  0662  1103               	clrz
  2115  0663  1803               	skipnc
  2116  0664  0A32               	incf	___ftadd@f1+2,w
  2117  0665  1D03               	btfss	3,2
  2118  0666  07B5               	addwf	___ftadd@f2+2,f
  2119  0667  1FB5               	btfss	___ftadd@f2+2,7
  2120  0668  2E7B               	goto	l1549
  2121  0669  30FF               	movlw	255
  2122  066A  06B3               	xorwf	___ftadd@f2,f
  2123  066B  30FF               	movlw	255
  2124  066C  06B4               	xorwf	___ftadd@f2+1,f
  2125  066D  30FF               	movlw	255
  2126  066E  06B5               	xorwf	___ftadd@f2+2,f
  2127  066F  3001               	movlw	1
  2128  0670  07B3               	addwf	___ftadd@f2,f
  2129  0671  3000               	movlw	0
  2130  0672  1803               	skipnc
  2131  0673  3001               	movlw	1
  2132  0674  07B4               	addwf	___ftadd@f2+1,f
  2133  0675  3000               	movlw	0
  2134  0676  1803               	skipnc
  2135  0677  3001               	movlw	1
  2136  0678  07B5               	addwf	___ftadd@f2+2,f
  2137  0679  01BA               	clrf	___ftadd@sign
  2138  067A  0ABA               	incf	___ftadd@sign,f
  2139  067B                     l1549:	
  2140  067B  0833               	movf	___ftadd@f2,w
  2141  067C  00F0               	movwf	___ftpack@arg
  2142  067D  0834               	movf	___ftadd@f2+1,w
  2143  067E  00F1               	movwf	___ftpack@arg+1
  2144  067F  0835               	movf	___ftadd@f2+2,w
  2145  0680  00F2               	movwf	___ftpack@arg+2
  2146  0681  083C               	movf	___ftadd@exp1,w
  2147  0682  00B6               	movwf	??___ftadd
  2148  0683  0836               	movf	??___ftadd,w
  2149  0684  00F3               	movwf	___ftpack@exp
  2150  0685  083A               	movf	___ftadd@sign,w
  2151  0686  00B7               	movwf	??___ftadd+1
  2152  0687  0837               	movf	??___ftadd+1,w
  2153  0688  00F4               	movwf	___ftpack@sign
  2154  0689  120A  118A  2109   	fcall	___ftpack
  2155  068C  0870               	movf	?___ftpack,w
  2156  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2157  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2158  068F  00B0               	movwf	?___ftadd
  2159  0690  0871               	movf	?___ftpack+1,w
  2160  0691  00B1               	movwf	?___ftadd+1
  2161  0692  0872               	movf	?___ftpack+2,w
  2162  0693  00B2               	movwf	?___ftadd+2
  2163  0694  0008               	return
  2164  0695                     __end_of___ftadd:	
  2165                           
  2166                           	psect	text7
  2167  0109                     __ptext7:	
  2168 ;; *************** function ___ftpack *****************
  2169 ;; Defined at:
  2170 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\float.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  arg             3    0[COMMON] unsigned um
  2173 ;;  exp             1    3[COMMON] unsigned char 
  2174 ;;  sign            1    4[COMMON] unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  3    0[COMMON] float 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         5       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0
  2188 ;;      Temps:          3       0       0       0       0
  2189 ;;      Totals:         8       0       0       0       0
  2190 ;;Total ram usage:        8 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		___ftadd
  2196 ;;		___ftdiv
  2197 ;;		___lltoft
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function ___ftpack
  2203  0109                     ___ftpack:	
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2207  0109  0873               	movf	___ftpack@exp,w
  2208  010A  1903               	btfsc	3,2
  2209  010B  2911               	goto	l1323
  2210  010C  0872               	movf	___ftpack@arg+2,w
  2211  010D  0471               	iorwf	___ftpack@arg+1,w
  2212  010E  0470               	iorwf	___ftpack@arg,w
  2213  010F  1D03               	skipz
  2214  0110  2924               	goto	l1329
  2215  0111                     l1323:	
  2216  0111  3000               	movlw	0
  2217  0112  00F0               	movwf	?___ftpack
  2218  0113  3000               	movlw	0
  2219  0114  00F1               	movwf	?___ftpack+1
  2220  0115  3000               	movlw	0
  2221  0116  00F2               	movwf	?___ftpack+2
  2222  0117  0008               	return
  2223  0118                     l1327:	
  2224  0118  3001               	movlw	1
  2225  0119  00F5               	movwf	??___ftpack
  2226  011A  0875               	movf	??___ftpack,w
  2227  011B  07F3               	addwf	___ftpack@exp,f
  2228  011C  3001               	movlw	1
  2229  011D                     u1295:	
  2230  011D  1003               	clrc
  2231  011E  0CF2               	rrf	___ftpack@arg+2,f
  2232  011F  0CF1               	rrf	___ftpack@arg+1,f
  2233  0120  0CF0               	rrf	___ftpack@arg,f
  2234  0121  3EFF               	addlw	-1
  2235  0122  1D03               	skipz
  2236  0123  291D               	goto	u1295
  2237  0124                     l1329:	
  2238  0124  30FE               	movlw	254
  2239  0125  0572               	andwf	___ftpack@arg+2,w
  2240  0126  1903               	btfsc	3,2
  2241  0127  293F               	goto	l455
  2242  0128  2918               	goto	l1327
  2243  0129                     l1331:	
  2244  0129  3001               	movlw	1
  2245  012A  00F5               	movwf	??___ftpack
  2246  012B  0875               	movf	??___ftpack,w
  2247  012C  07F3               	addwf	___ftpack@exp,f
  2248  012D  3001               	movlw	1
  2249  012E  07F0               	addwf	___ftpack@arg,f
  2250  012F  3000               	movlw	0
  2251  0130  1803               	skipnc
  2252  0131  3001               	movlw	1
  2253  0132  07F1               	addwf	___ftpack@arg+1,f
  2254  0133  3000               	movlw	0
  2255  0134  1803               	skipnc
  2256  0135  3001               	movlw	1
  2257  0136  07F2               	addwf	___ftpack@arg+2,f
  2258  0137  3001               	movlw	1
  2259  0138                     u1315:	
  2260  0138  1003               	clrc
  2261  0139  0CF2               	rrf	___ftpack@arg+2,f
  2262  013A  0CF1               	rrf	___ftpack@arg+1,f
  2263  013B  0CF0               	rrf	___ftpack@arg,f
  2264  013C  3EFF               	addlw	-1
  2265  013D  1D03               	skipz
  2266  013E  2938               	goto	u1315
  2267  013F                     l455:	
  2268  013F  30FF               	movlw	255
  2269  0140  0572               	andwf	___ftpack@arg+2,w
  2270  0141  1903               	btfsc	3,2
  2271  0142  294E               	goto	l1339
  2272  0143  2929               	goto	l1331
  2273  0144                     l1337:	
  2274  0144  3001               	movlw	1
  2275  0145  02F3               	subwf	___ftpack@exp,f
  2276  0146  3001               	movlw	1
  2277  0147                     u1335:	
  2278  0147  1003               	clrc
  2279  0148  0DF0               	rlf	___ftpack@arg,f
  2280  0149  0DF1               	rlf	___ftpack@arg+1,f
  2281  014A  0DF2               	rlf	___ftpack@arg+2,f
  2282  014B  3EFF               	addlw	-1
  2283  014C  1D03               	skipz
  2284  014D  2947               	goto	u1335
  2285  014E                     l1339:	
  2286  014E  1FF1               	btfss	___ftpack@arg+1,7
  2287  014F  2944               	goto	l1337
  2288  0150  1873               	btfsc	___ftpack@exp,0
  2289  0151  2958               	goto	l461
  2290  0152  30FF               	movlw	255
  2291  0153  05F0               	andwf	___ftpack@arg,f
  2292  0154  307F               	movlw	127
  2293  0155  05F1               	andwf	___ftpack@arg+1,f
  2294  0156  30FF               	movlw	255
  2295  0157  05F2               	andwf	___ftpack@arg+2,f
  2296  0158                     l461:	
  2297  0158  1003               	clrc
  2298  0159  0CF3               	rrf	___ftpack@exp,f
  2299  015A  0873               	movf	___ftpack@exp,w
  2300  015B  00F5               	movwf	??___ftpack
  2301  015C  01F6               	clrf	??___ftpack+1
  2302  015D  01F7               	clrf	??___ftpack+2
  2303  015E  3010               	movlw	16
  2304  015F                     u1365:	
  2305  015F  1003               	clrc
  2306  0160  0DF5               	rlf	??___ftpack,f
  2307  0161  0DF6               	rlf	??___ftpack+1,f
  2308  0162  0DF7               	rlf	??___ftpack+2,f
  2309  0163  3EFF               	addlw	-1
  2310  0164  1D03               	skipz
  2311  0165  295F               	goto	u1365
  2312  0166  0875               	movf	??___ftpack,w
  2313  0167  04F0               	iorwf	___ftpack@arg,f
  2314  0168  0876               	movf	??___ftpack+1,w
  2315  0169  04F1               	iorwf	___ftpack@arg+1,f
  2316  016A  0877               	movf	??___ftpack+2,w
  2317  016B  04F2               	iorwf	___ftpack@arg+2,f
  2318  016C  0874               	movf	___ftpack@sign,w
  2319  016D  1903               	btfsc	3,2
  2320  016E  0008               	return
  2321  016F  17F2               	bsf	___ftpack@arg+2,7
  2322  0170  0008               	return
  2323  0171                     __end_of___ftpack:	
  2324                           
  2325                           	psect	text8
  2326  0ED2                     __ptext8:	
  2327 ;; *************** function _picInit *****************
  2328 ;; Defined at:
  2329 ;;		line 149 in file "main.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;		None               void
  2336 ;; Registers used:
  2337 ;;		wreg, status,2
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _picInit
  2358  0ED2                     _picInit:	
  2359                           
  2360                           ;main.c: 151: IRCF2 = 1;
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _picInit: [wreg+status,2]
  2364  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0ED3  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0ED4  170F               	bsf	15,6	;volatile
  2367                           
  2368                           ;main.c: 152: IRCF1 = 1;
  2369  0ED5  168F               	bsf	15,5	;volatile
  2370                           
  2371                           ;main.c: 153: IRCF0 = 1;
  2372  0ED6  160F               	bsf	15,4	;volatile
  2373                           
  2374                           ;main.c: 155: ANSEL = 0;
  2375  0ED7  1683               	bsf	3,5	;RP0=1, select bank3
  2376  0ED8  1703               	bsf	3,6	;RP1=1, select bank3
  2377  0ED9  0188               	clrf	8	;volatile
  2378                           
  2379                           ;main.c: 156: ANSELH = 0;
  2380  0EDA  0189               	clrf	9	;volatile
  2381                           
  2382                           ;main.c: 158: PORTA = 0;
  2383  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0EDD  0185               	clrf	5	;volatile
  2386                           
  2387                           ;main.c: 159: PORTB = 0;
  2388  0EDE  0186               	clrf	6	;volatile
  2389                           
  2390                           ;main.c: 160: PORTC = 0;
  2391  0EDF  0187               	clrf	7	;volatile
  2392                           
  2393                           ;main.c: 161: PORTD = 0;
  2394  0EE0  0188               	clrf	8	;volatile
  2395                           
  2396                           ;main.c: 162: PORTE = 0;
  2397  0EE1  0189               	clrf	9	;volatile
  2398                           
  2399                           ;main.c: 164: TRISA = 0b00111000;
  2400  0EE2  3038               	movlw	56
  2401  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  2402  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  2403  0EE5  0085               	movwf	5	;volatile
  2404                           
  2405                           ;main.c: 165: TRISB = 0b00000011;
  2406  0EE6  3003               	movlw	3
  2407  0EE7  0086               	movwf	6	;volatile
  2408                           
  2409                           ;main.c: 166: TRISC = 0b10000000;
  2410  0EE8  3080               	movlw	128
  2411  0EE9  0087               	movwf	7	;volatile
  2412                           
  2413                           ;main.c: 167: TRISD = 0b00000000;
  2414  0EEA  0188               	clrf	8	;volatile
  2415                           
  2416                           ;main.c: 168: TRISE = 0b011;
  2417  0EEB  3003               	movlw	3
  2418  0EEC  0089               	movwf	9	;volatile
  2419  0EED  0008               	return
  2420  0EEE                     __end_of_picInit:	
  2421                           
  2422                           	psect	text9
  2423  0247                     __ptext9:	
  2424 ;; *************** function _motor *****************
  2425 ;; Defined at:
  2426 ;;		line 183 in file "main.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  speedLM         1    wreg     char 
  2429 ;;  speedRM         1   10[BANK0 ] char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  speedLM         1   14[BANK0 ] char 
  2432 ;;  speed           1   15[BANK0 ] unsigned char 
  2433 ;;  maxSpeed        1   13[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       1       0       0       0
  2444 ;;      Locals:         0       3       0       0       0
  2445 ;;      Temps:          0       2       0       0       0
  2446 ;;      Totals:         0       6       0       0       0
  2447 ;;Total ram usage:        6 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    2
  2450 ;; This function calls:
  2451 ;;		___bmul
  2452 ;;		_setPwmRC1
  2453 ;;		_setPwmRC2
  2454 ;; This function is called by:
  2455 ;;		_main
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _motor
  2461  0247                     _motor:	
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _motor: [wreg+status,2+status,0+pclath+cstack]
  2465                           ;motor@speedLM stored from wreg
  2466  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0249  00AE               	movwf	motor@speedLM
  2469                           
  2470                           ;main.c: 185: uChar speed, maxSpeed = 80;
  2471  024A  3050               	movlw	80
  2472  024B  00AB               	movwf	??_motor
  2473  024C  082B               	movf	??_motor,w
  2474  024D  00AD               	movwf	motor@maxSpeed
  2475                           
  2476                           ;main.c: 187: if(speedLM < 0)
  2477  024E  1FAE               	btfss	motor@speedLM,7
  2478  024F  2A61               	goto	l1749
  2479                           
  2480                           ;main.c: 188: {
  2481                           ;main.c: 189: RB4 = 1;
  2482  0250  1606               	bsf	6,4	;volatile
  2483                           
  2484                           ;main.c: 190: RB5 = 0;
  2485  0251  1286               	bcf	6,5	;volatile
  2486                           
  2487                           ;main.c: 191: speed = (-1) * speedLM;
  2488  0252  30FF               	movlw	255
  2489  0253  00AB               	movwf	??_motor
  2490  0254  082B               	movf	??_motor,w
  2491  0255  00F0               	movwf	___bmul@multiplicand
  2492  0256  082E               	movf	motor@speedLM,w
  2493  0257  120A  158A  26A7  120A  118A  	fcall	___bmul
  2494  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2495  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2496  025E  00AC               	movwf	??_motor+1
  2497  025F  082C               	movf	??_motor+1,w
  2498  0260  2A71               	goto	L3
  2499  0261                     l1749:	
  2500                           ;main.c: 192: }
  2501                           
  2502                           
  2503                           ;main.c: 193: else if(speedLM > 0)
  2504  0261  082E               	movf	motor@speedLM,w
  2505  0262  3A80               	xorlw	128
  2506  0263  3E7F               	addlw	-129
  2507  0264  1C03               	skipc
  2508  0265  2A69               	goto	l1755
  2509                           
  2510                           ;main.c: 194: {
  2511                           ;main.c: 195: RB4 = 0;
  2512  0266  1206               	bcf	6,4	;volatile
  2513                           
  2514                           ;main.c: 196: RB5 = 1;
  2515  0267  1686               	bsf	6,5	;volatile
  2516  0268  2A6E               	goto	L6
  2517  0269                     l1755:	
  2518                           ;main.c: 198: }
  2519                           
  2520                           ;main.c: 197: speed = speedLM;
  2521                           
  2522                           
  2523                           ;main.c: 199: else if(!speedLM)
  2524  0269  08AE               	movf	motor@speedLM,f
  2525  026A  1D03               	skipz
  2526  026B  2A72               	goto	l199
  2527                           
  2528                           ;main.c: 200: {
  2529                           ;main.c: 201: RB4 = 0;
  2530  026C  1206               	bcf	6,4	;volatile
  2531                           
  2532                           ;main.c: 202: RB5 = 0;
  2533  026D  1286               	bcf	6,5	;volatile
  2534  026E                     L6:	
  2535                           
  2536                           ;main.c: 203: speed = speedLM;
  2537  026E  082E               	movf	motor@speedLM,w
  2538  026F  00AB               	movwf	??_motor
  2539  0270  082B               	movf	??_motor,w
  2540  0271                     L3:	
  2541  0271  00AF               	movwf	motor@speed
  2542  0272                     l199:	
  2543                           
  2544                           ;main.c: 204: }
  2545                           ;main.c: 205: if(speed > maxSpeed) speed = maxSpeed;
  2546  0272  082F               	movf	motor@speed,w
  2547  0273  022D               	subwf	motor@maxSpeed,w
  2548  0274  1803               	skipnc
  2549  0275  2A7A               	goto	l1763
  2550  0276  082D               	movf	motor@maxSpeed,w
  2551  0277  00AB               	movwf	??_motor
  2552  0278  082B               	movf	??_motor,w
  2553  0279  00AF               	movwf	motor@speed
  2554  027A                     l1763:	
  2555                           
  2556                           ;main.c: 206: setPwmRC1(1000, speed);
  2557  027A  30E8               	movlw	232
  2558  027B  00A6               	movwf	setPwmRC1@freq
  2559  027C  3003               	movlw	3
  2560  027D  00A7               	movwf	setPwmRC1@freq+1
  2561  027E  082F               	movf	motor@speed,w
  2562  027F  00AB               	movwf	??_motor
  2563  0280  01AC               	clrf	??_motor+1
  2564  0281  082B               	movf	??_motor,w
  2565  0282  00A8               	movwf	setPwmRC1@duty
  2566  0283  082C               	movf	??_motor+1,w
  2567  0284  00A9               	movwf	setPwmRC1@duty+1
  2568  0285  120A  118A  2171  120A  118A  	fcall	_setPwmRC1
  2569                           
  2570                           ;main.c: 208: if(speedRM < 0)
  2571  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2572  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2573  028C  1FAA               	btfss	motor@speedRM,7
  2574  028D  2A9F               	goto	l1771
  2575                           
  2576                           ;main.c: 209: {
  2577                           ;main.c: 210: RB2 = 1;
  2578  028E  1506               	bsf	6,2	;volatile
  2579                           
  2580                           ;main.c: 211: RB3 = 0;
  2581  028F  1186               	bcf	6,3	;volatile
  2582                           
  2583                           ;main.c: 212: speed = (-1) * speedRM;
  2584  0290  30FF               	movlw	255
  2585  0291  00AB               	movwf	??_motor
  2586  0292  082B               	movf	??_motor,w
  2587  0293  00F0               	movwf	___bmul@multiplicand
  2588  0294  082A               	movf	motor@speedRM,w
  2589  0295  120A  158A  26A7  120A  118A  	fcall	___bmul
  2590  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2591  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2592  029C  00AC               	movwf	??_motor+1
  2593  029D  082C               	movf	??_motor+1,w
  2594  029E  2AAF               	goto	L5
  2595  029F                     l1771:	
  2596                           ;main.c: 213: }
  2597                           
  2598                           
  2599                           ;main.c: 214: else if(speedRM > 0)
  2600  029F  082A               	movf	motor@speedRM,w
  2601  02A0  3A80               	xorlw	128
  2602  02A1  3E7F               	addlw	-129
  2603  02A2  1C03               	skipc
  2604  02A3  2AA7               	goto	l1777
  2605                           
  2606                           ;main.c: 215: {
  2607                           ;main.c: 216: RB2 = 0;
  2608  02A4  1106               	bcf	6,2	;volatile
  2609                           
  2610                           ;main.c: 217: RB3 = 1;
  2611  02A5  1586               	bsf	6,3	;volatile
  2612  02A6  2AAC               	goto	L7
  2613  02A7                     l1777:	
  2614                           ;main.c: 219: }
  2615                           
  2616                           ;main.c: 218: speed = speedRM;
  2617                           
  2618                           
  2619                           ;main.c: 220: else if(!speedRM)
  2620  02A7  08AA               	movf	motor@speedRM,f
  2621  02A8  1D03               	skipz
  2622  02A9  2AB0               	goto	l205
  2623                           
  2624                           ;main.c: 221: {
  2625                           ;main.c: 222: RB2 = 0;
  2626  02AA  1106               	bcf	6,2	;volatile
  2627                           
  2628                           ;main.c: 223: RB3 = 0;
  2629  02AB  1186               	bcf	6,3	;volatile
  2630  02AC                     L7:	
  2631                           
  2632                           ;main.c: 224: speed = speedRM;
  2633  02AC  082A               	movf	motor@speedRM,w
  2634  02AD  00AB               	movwf	??_motor
  2635  02AE  082B               	movf	??_motor,w
  2636  02AF                     L5:	
  2637  02AF  00AF               	movwf	motor@speed
  2638  02B0                     l205:	
  2639                           
  2640                           ;main.c: 225: }
  2641                           ;main.c: 226: if(speed > maxSpeed) speed = maxSpeed;
  2642  02B0  082F               	movf	motor@speed,w
  2643  02B1  022D               	subwf	motor@maxSpeed,w
  2644  02B2  1803               	skipnc
  2645  02B3  2AB8               	goto	l1785
  2646  02B4  082D               	movf	motor@maxSpeed,w
  2647  02B5  00AB               	movwf	??_motor
  2648  02B6  082B               	movf	??_motor,w
  2649  02B7  00AF               	movwf	motor@speed
  2650  02B8                     l1785:	
  2651                           
  2652                           ;main.c: 227: setPwmRC2(1000, speed);
  2653  02B8  30E8               	movlw	232
  2654  02B9  00A6               	movwf	setPwmRC2@freq
  2655  02BA  3003               	movlw	3
  2656  02BB  00A7               	movwf	setPwmRC2@freq+1
  2657  02BC  082F               	movf	motor@speed,w
  2658  02BD  00AB               	movwf	??_motor
  2659  02BE  01AC               	clrf	??_motor+1
  2660  02BF  082B               	movf	??_motor,w
  2661  02C0  00A8               	movwf	setPwmRC2@duty
  2662  02C1  082C               	movf	??_motor+1,w
  2663  02C2  00A9               	movwf	setPwmRC2@duty+1
  2664  02C3  120A  118A  21DC   	fcall	_setPwmRC2
  2665  02C6  0008               	return
  2666  02C7                     __end_of_motor:	
  2667                           
  2668                           	psect	text10
  2669  01DC                     __ptext10:	
  2670 ;; *************** function _setPwmRC2 *****************
  2671 ;; Defined at:
  2672 ;;		line 23 in file "pwm.h"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  freq            2    6[BANK0 ] int 
  2675 ;;  duty            2    8[BANK0 ] int 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  a               2   12[COMMON] int 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       4       0       0       0
  2688 ;;      Locals:         2       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0
  2690 ;;      Totals:         3       4       0       0       0
  2691 ;;Total ram usage:        7 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    1
  2694 ;; This function calls:
  2695 ;;		___aldiv
  2696 ;;		___awdiv
  2697 ;;		___wmul
  2698 ;; This function is called by:
  2699 ;;		_motor
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _setPwmRC2
  2705  01DC                     _setPwmRC2:	
  2706                           
  2707                           ;pwm.h: 25: int a;
  2708                           ;pwm.h: 26: T2CON = 0b00000111;
  2709                           
  2710                           ;incstack = 0
  2711                           ; Regs used in _setPwmRC2: [wreg+status,2+status,0+pclath+cstack]
  2712  01DC  3007               	movlw	7
  2713  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2714  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2715  01DF  0092               	movwf	18	;volatile
  2716                           
  2717                           ;pwm.h: 27: CCP1CON = 0b00001100;
  2718  01E0  300C               	movlw	12
  2719  01E1  0097               	movwf	23	;volatile
  2720                           
  2721                           ;pwm.h: 28: PR2 = (8000000 / (4 * 16)) / (freq) - 1;
  2722  01E2  0826               	movf	setPwmRC2@freq,w
  2723  01E3  00F0               	movwf	___aldiv@divisor
  2724  01E4  0827               	movf	setPwmRC2@freq+1,w
  2725  01E5  00F1               	movwf	___aldiv@divisor+1
  2726  01E6  3000               	movlw	0
  2727  01E7  1BF1               	btfsc	___aldiv@divisor+1,7
  2728  01E8  30FF               	movlw	255
  2729  01E9  00F2               	movwf	___aldiv@divisor+2
  2730  01EA  00F3               	movwf	___aldiv@divisor+3
  2731  01EB  3000               	movlw	0
  2732  01EC  00F7               	movwf	___aldiv@dividend+3
  2733  01ED  3001               	movlw	1
  2734  01EE  00F6               	movwf	___aldiv@dividend+2
  2735  01EF  30E8               	movlw	232
  2736  01F0  00F5               	movwf	___aldiv@dividend+1
  2737  01F1  3048               	movlw	72
  2738  01F2  00F4               	movwf	___aldiv@dividend
  2739  01F3  120A  118A  2355  120A  118A  	fcall	___aldiv
  2740  01F8  0870               	movf	?___aldiv,w
  2741  01F9  3EFF               	addlw	255
  2742  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2743  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  2744  01FC  0092               	movwf	18	;volatile
  2745                           
  2746                           ;pwm.h: 29: a = (PR2 + 1) * duty / 25;
  2747  01FD  3019               	movlw	25
  2748  01FE  00F6               	movwf	___awdiv@divisor
  2749  01FF  3000               	movlw	0
  2750  0200  00F7               	movwf	___awdiv@divisor+1
  2751  0201  0812               	movf	18,w	;volatile
  2752  0202  3E01               	addlw	1
  2753  0203  00F0               	movwf	___wmul@multiplier
  2754  0204  3000               	movlw	0
  2755  0205  1803               	skipnc
  2756  0206  3001               	movlw	1
  2757  0207  00F1               	movwf	___wmul@multiplier+1
  2758  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2760  020A  0829               	movf	setPwmRC2@duty+1,w
  2761  020B  01F3               	clrf	___wmul@multiplicand+1
  2762  020C  07F3               	addwf	___wmul@multiplicand+1,f
  2763  020D  0828               	movf	setPwmRC2@duty,w
  2764  020E  01F2               	clrf	___wmul@multiplicand
  2765  020F  07F2               	addwf	___wmul@multiplicand,f
  2766  0210  120A  158A  26EE  120A  118A  	fcall	___wmul
  2767  0215  0871               	movf	?___wmul+1,w
  2768  0216  01F9               	clrf	___awdiv@dividend+1
  2769  0217  07F9               	addwf	___awdiv@dividend+1,f
  2770  0218  0870               	movf	?___wmul,w
  2771  0219  01F8               	clrf	___awdiv@dividend
  2772  021A  07F8               	addwf	___awdiv@dividend,f
  2773  021B  120A  158A  27A3  120A  118A  	fcall	___awdiv
  2774  0220  0877               	movf	?___awdiv+1,w
  2775  0221  01FD               	clrf	setPwmRC2@a+1
  2776  0222  07FD               	addwf	setPwmRC2@a+1,f
  2777  0223  0876               	movf	?___awdiv,w
  2778  0224  01FC               	clrf	setPwmRC2@a
  2779  0225  07FC               	addwf	setPwmRC2@a,f
  2780                           
  2781                           ;pwm.h: 30: CCPR1L = a / 4;
  2782  0226  3004               	movlw	4
  2783  0227  00F6               	movwf	___awdiv@divisor
  2784  0228  3000               	movlw	0
  2785  0229  00F7               	movwf	___awdiv@divisor+1
  2786  022A  087D               	movf	setPwmRC2@a+1,w
  2787  022B  01F9               	clrf	___awdiv@dividend+1
  2788  022C  07F9               	addwf	___awdiv@dividend+1,f
  2789  022D  087C               	movf	setPwmRC2@a,w
  2790  022E  01F8               	clrf	___awdiv@dividend
  2791  022F  07F8               	addwf	___awdiv@dividend,f
  2792  0230  120A  158A  27A3  120A  118A  	fcall	___awdiv
  2793  0235  0876               	movf	?___awdiv,w
  2794  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0238  0095               	movwf	21	;volatile
  2797                           
  2798                           ;pwm.h: 31: CCP1CON = (CCP1CON & 0b11001111) | ((a % 4) << 4);
  2799  0239  087C               	movf	setPwmRC2@a,w
  2800  023A  3903               	andlw	3
  2801  023B  00FB               	movwf	??_setPwmRC2
  2802  023C  3004               	movlw	4
  2803  023D                     u1615:	
  2804  023D  1003               	clrc
  2805  023E  0DFB               	rlf	??_setPwmRC2,f
  2806  023F  3EFF               	addlw	-1
  2807  0240  1D03               	skipz
  2808  0241  2A3D               	goto	u1615
  2809  0242  0817               	movf	23,w	;volatile
  2810  0243  39CF               	andlw	207
  2811  0244  047B               	iorwf	??_setPwmRC2,w
  2812  0245  0097               	movwf	23	;volatile
  2813  0246  0008               	return
  2814  0247                     __end_of_setPwmRC2:	
  2815                           
  2816                           	psect	text11
  2817  0171                     __ptext11:	
  2818 ;; *************** function _setPwmRC1 *****************
  2819 ;; Defined at:
  2820 ;;		line 12 in file "pwm.h"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  freq            2    6[BANK0 ] int 
  2823 ;;  duty            2    8[BANK0 ] int 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  a               2   12[COMMON] int 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;		None               void
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       4       0       0       0
  2836 ;;      Locals:         2       0       0       0       0
  2837 ;;      Temps:          1       0       0       0       0
  2838 ;;      Totals:         3       4       0       0       0
  2839 ;;Total ram usage:        7 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		___aldiv
  2844 ;;		___awdiv
  2845 ;;		___wmul
  2846 ;; This function is called by:
  2847 ;;		_motor
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _setPwmRC1
  2853  0171                     _setPwmRC1:	
  2854                           
  2855                           ;pwm.h: 14: int a;
  2856                           ;pwm.h: 15: T2CON = 0b00000111;
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _setPwmRC1: [wreg+status,2+status,0+pclath+cstack]
  2860  0171  3007               	movlw	7
  2861  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0174  0092               	movwf	18	;volatile
  2864                           
  2865                           ;pwm.h: 16: CCP2CON = 0b00001100;
  2866  0175  300C               	movlw	12
  2867  0176  009D               	movwf	29	;volatile
  2868                           
  2869                           ;pwm.h: 17: PR2 = (8000000 / (4 * 16)) / (freq) - 1;
  2870  0177  0826               	movf	setPwmRC1@freq,w
  2871  0178  00F0               	movwf	___aldiv@divisor
  2872  0179  0827               	movf	setPwmRC1@freq+1,w
  2873  017A  00F1               	movwf	___aldiv@divisor+1
  2874  017B  3000               	movlw	0
  2875  017C  1BF1               	btfsc	___aldiv@divisor+1,7
  2876  017D  30FF               	movlw	255
  2877  017E  00F2               	movwf	___aldiv@divisor+2
  2878  017F  00F3               	movwf	___aldiv@divisor+3
  2879  0180  3000               	movlw	0
  2880  0181  00F7               	movwf	___aldiv@dividend+3
  2881  0182  3001               	movlw	1
  2882  0183  00F6               	movwf	___aldiv@dividend+2
  2883  0184  30E8               	movlw	232
  2884  0185  00F5               	movwf	___aldiv@dividend+1
  2885  0186  3048               	movlw	72
  2886  0187  00F4               	movwf	___aldiv@dividend
  2887  0188  120A  118A  2355  120A  118A  	fcall	___aldiv
  2888  018D  0870               	movf	?___aldiv,w
  2889  018E  3EFF               	addlw	255
  2890  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0190  1303               	bcf	3,6	;RP1=0, select bank1
  2892  0191  0092               	movwf	18	;volatile
  2893                           
  2894                           ;pwm.h: 18: a = (PR2 + 1) * duty / 25;
  2895  0192  3019               	movlw	25
  2896  0193  00F6               	movwf	___awdiv@divisor
  2897  0194  3000               	movlw	0
  2898  0195  00F7               	movwf	___awdiv@divisor+1
  2899  0196  0812               	movf	18,w	;volatile
  2900  0197  3E01               	addlw	1
  2901  0198  00F0               	movwf	___wmul@multiplier
  2902  0199  3000               	movlw	0
  2903  019A  1803               	skipnc
  2904  019B  3001               	movlw	1
  2905  019C  00F1               	movwf	___wmul@multiplier+1
  2906  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2907  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2908  019F  0829               	movf	setPwmRC1@duty+1,w
  2909  01A0  01F3               	clrf	___wmul@multiplicand+1
  2910  01A1  07F3               	addwf	___wmul@multiplicand+1,f
  2911  01A2  0828               	movf	setPwmRC1@duty,w
  2912  01A3  01F2               	clrf	___wmul@multiplicand
  2913  01A4  07F2               	addwf	___wmul@multiplicand,f
  2914  01A5  120A  158A  26EE  120A  118A  	fcall	___wmul
  2915  01AA  0871               	movf	?___wmul+1,w
  2916  01AB  01F9               	clrf	___awdiv@dividend+1
  2917  01AC  07F9               	addwf	___awdiv@dividend+1,f
  2918  01AD  0870               	movf	?___wmul,w
  2919  01AE  01F8               	clrf	___awdiv@dividend
  2920  01AF  07F8               	addwf	___awdiv@dividend,f
  2921  01B0  120A  158A  27A3  120A  118A  	fcall	___awdiv
  2922  01B5  0877               	movf	?___awdiv+1,w
  2923  01B6  01FD               	clrf	setPwmRC1@a+1
  2924  01B7  07FD               	addwf	setPwmRC1@a+1,f
  2925  01B8  0876               	movf	?___awdiv,w
  2926  01B9  01FC               	clrf	setPwmRC1@a
  2927  01BA  07FC               	addwf	setPwmRC1@a,f
  2928                           
  2929                           ;pwm.h: 19: CCPR2L = a / 4;
  2930  01BB  3004               	movlw	4
  2931  01BC  00F6               	movwf	___awdiv@divisor
  2932  01BD  3000               	movlw	0
  2933  01BE  00F7               	movwf	___awdiv@divisor+1
  2934  01BF  087D               	movf	setPwmRC1@a+1,w
  2935  01C0  01F9               	clrf	___awdiv@dividend+1
  2936  01C1  07F9               	addwf	___awdiv@dividend+1,f
  2937  01C2  087C               	movf	setPwmRC1@a,w
  2938  01C3  01F8               	clrf	___awdiv@dividend
  2939  01C4  07F8               	addwf	___awdiv@dividend,f
  2940  01C5  120A  158A  27A3  120A  118A  	fcall	___awdiv
  2941  01CA  0876               	movf	?___awdiv,w
  2942  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2943  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2944  01CD  009B               	movwf	27	;volatile
  2945                           
  2946                           ;pwm.h: 20: CCP2CON = (CCP2CON & 0b11001111) | ((a % 4) << 4);
  2947  01CE  087C               	movf	setPwmRC1@a,w
  2948  01CF  3903               	andlw	3
  2949  01D0  00FB               	movwf	??_setPwmRC1
  2950  01D1  3004               	movlw	4
  2951  01D2                     u1605:	
  2952  01D2  1003               	clrc
  2953  01D3  0DFB               	rlf	??_setPwmRC1,f
  2954  01D4  3EFF               	addlw	-1
  2955  01D5  1D03               	skipz
  2956  01D6  29D2               	goto	u1605
  2957  01D7  081D               	movf	29,w	;volatile
  2958  01D8  39CF               	andlw	207
  2959  01D9  047B               	iorwf	??_setPwmRC1,w
  2960  01DA  009D               	movwf	29	;volatile
  2961  01DB  0008               	return
  2962  01DC                     __end_of_setPwmRC1:	
  2963                           
  2964                           	psect	text12
  2965  0EEE                     __ptext12:	
  2966 ;; *************** function ___wmul *****************
  2967 ;; Defined at:
  2968 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\Umul16.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  multiplier      2    0[COMMON] unsigned int 
  2971 ;;  multiplicand    2    2[COMMON] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  product         2    4[COMMON] unsigned int 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    0[COMMON] unsigned int 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         4       0       0       0       0
  2984 ;;      Locals:         2       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0
  2986 ;;      Totals:         6       0       0       0       0
  2987 ;;Total ram usage:        6 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_setPwmRC1
  2993 ;;		_setPwmRC2
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function ___wmul
  2999  0EEE                     ___wmul:	
  3000                           
  3001                           ;incstack = 0
  3002                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3003  0EEE  01F4               	clrf	___wmul@product
  3004  0EEF  01F5               	clrf	___wmul@product+1
  3005  0EF0                     l1309:	
  3006  0EF0  1C70               	btfss	___wmul@multiplier,0
  3007  0EF1  2EF8               	goto	l294
  3008  0EF2  0872               	movf	___wmul@multiplicand,w
  3009  0EF3  07F4               	addwf	___wmul@product,f
  3010  0EF4  1803               	skipnc
  3011  0EF5  0AF5               	incf	___wmul@product+1,f
  3012  0EF6  0873               	movf	___wmul@multiplicand+1,w
  3013  0EF7  07F5               	addwf	___wmul@product+1,f
  3014  0EF8                     l294:	
  3015  0EF8  3001               	movlw	1
  3016  0EF9                     u1245:	
  3017  0EF9  1003               	clrc
  3018  0EFA  0DF2               	rlf	___wmul@multiplicand,f
  3019  0EFB  0DF3               	rlf	___wmul@multiplicand+1,f
  3020  0EFC  3EFF               	addlw	-1
  3021  0EFD  1D03               	skipz
  3022  0EFE  2EF9               	goto	u1245
  3023  0EFF  3001               	movlw	1
  3024  0F00                     u1255:	
  3025  0F00  1003               	clrc
  3026  0F01  0CF1               	rrf	___wmul@multiplier+1,f
  3027  0F02  0CF0               	rrf	___wmul@multiplier,f
  3028  0F03  3EFF               	addlw	-1
  3029  0F04  1D03               	skipz
  3030  0F05  2F00               	goto	u1255
  3031  0F06  0871               	movf	___wmul@multiplier+1,w
  3032  0F07  0470               	iorwf	___wmul@multiplier,w
  3033  0F08  1D03               	skipz
  3034  0F09  2EF0               	goto	l1309
  3035  0F0A  0875               	movf	___wmul@product+1,w
  3036  0F0B  01F1               	clrf	?___wmul+1
  3037  0F0C  07F1               	addwf	?___wmul+1,f
  3038  0F0D  0874               	movf	___wmul@product,w
  3039  0F0E  01F0               	clrf	?___wmul
  3040  0F0F  07F0               	addwf	?___wmul,f
  3041  0F10  0008               	return
  3042  0F11                     __end_of___wmul:	
  3043                           
  3044                           	psect	text13
  3045  0FA3                     __ptext13:	
  3046 ;; *************** function ___awdiv *****************
  3047 ;; Defined at:
  3048 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  divisor         2    6[COMMON] int 
  3051 ;;  dividend        2    8[COMMON] int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  quotient        2    2[BANK0 ] int 
  3054 ;;  sign            1    1[BANK0 ] unsigned char 
  3055 ;;  counter         1    0[BANK0 ] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  2    6[COMMON] int 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         4       0       0       0       0
  3066 ;;      Locals:         0       4       0       0       0
  3067 ;;      Temps:          1       0       0       0       0
  3068 ;;      Totals:         5       4       0       0       0
  3069 ;;Total ram usage:        9 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_setPwmRC1
  3075 ;;		_setPwmRC2
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function ___awdiv
  3081  0FA3                     ___awdiv:	
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3085  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0FA5  01A1               	clrf	___awdiv@sign
  3088  0FA6  1FF7               	btfss	___awdiv@divisor+1,7
  3089  0FA7  2FAF               	goto	l1397
  3090  0FA8  09F6               	comf	___awdiv@divisor,f
  3091  0FA9  09F7               	comf	___awdiv@divisor+1,f
  3092  0FAA  0AF6               	incf	___awdiv@divisor,f
  3093  0FAB  1903               	skipnz
  3094  0FAC  0AF7               	incf	___awdiv@divisor+1,f
  3095  0FAD  01A1               	clrf	___awdiv@sign
  3096  0FAE  0AA1               	incf	___awdiv@sign,f
  3097  0FAF                     l1397:	
  3098  0FAF  1FF9               	btfss	___awdiv@dividend+1,7
  3099  0FB0  2FBA               	goto	l1403
  3100  0FB1  09F8               	comf	___awdiv@dividend,f
  3101  0FB2  09F9               	comf	___awdiv@dividend+1,f
  3102  0FB3  0AF8               	incf	___awdiv@dividend,f
  3103  0FB4  1903               	skipnz
  3104  0FB5  0AF9               	incf	___awdiv@dividend+1,f
  3105  0FB6  3001               	movlw	1
  3106  0FB7  00FA               	movwf	??___awdiv
  3107  0FB8  087A               	movf	??___awdiv,w
  3108  0FB9  06A1               	xorwf	___awdiv@sign,f
  3109  0FBA                     l1403:	
  3110  0FBA  01A2               	clrf	___awdiv@quotient
  3111  0FBB  01A3               	clrf	___awdiv@quotient+1
  3112  0FBC  0877               	movf	___awdiv@divisor+1,w
  3113  0FBD  0476               	iorwf	___awdiv@divisor,w
  3114  0FBE  1903               	skipnz
  3115  0FBF  2FF1               	goto	l1425
  3116  0FC0  01A0               	clrf	___awdiv@counter
  3117  0FC1  0AA0               	incf	___awdiv@counter,f
  3118  0FC2                     l1413:	
  3119  0FC2  1BF7               	btfsc	___awdiv@divisor+1,7
  3120  0FC3  2FD0               	goto	l1415
  3121  0FC4  3001               	movlw	1
  3122  0FC5                     u1515:	
  3123  0FC5  1003               	clrc
  3124  0FC6  0DF6               	rlf	___awdiv@divisor,f
  3125  0FC7  0DF7               	rlf	___awdiv@divisor+1,f
  3126  0FC8  3EFF               	addlw	-1
  3127  0FC9  1D03               	skipz
  3128  0FCA  2FC5               	goto	u1515
  3129  0FCB  3001               	movlw	1
  3130  0FCC  00FA               	movwf	??___awdiv
  3131  0FCD  087A               	movf	??___awdiv,w
  3132  0FCE  07A0               	addwf	___awdiv@counter,f
  3133  0FCF  2FC2               	goto	l1413
  3134  0FD0                     l1415:	
  3135  0FD0  3001               	movlw	1
  3136  0FD1                     u1535:	
  3137  0FD1  1003               	clrc
  3138  0FD2  0DA2               	rlf	___awdiv@quotient,f
  3139  0FD3  0DA3               	rlf	___awdiv@quotient+1,f
  3140  0FD4  3EFF               	addlw	-1
  3141  0FD5  1D03               	skipz
  3142  0FD6  2FD1               	goto	u1535
  3143  0FD7  0877               	movf	___awdiv@divisor+1,w
  3144  0FD8  0279               	subwf	___awdiv@dividend+1,w
  3145  0FD9  1D03               	skipz
  3146  0FDA  2FDD               	goto	u1545
  3147  0FDB  0876               	movf	___awdiv@divisor,w
  3148  0FDC  0278               	subwf	___awdiv@dividend,w
  3149  0FDD                     u1545:	
  3150  0FDD  1C03               	skipc
  3151  0FDE  2FE6               	goto	l1421
  3152  0FDF  0876               	movf	___awdiv@divisor,w
  3153  0FE0  02F8               	subwf	___awdiv@dividend,f
  3154  0FE1  0877               	movf	___awdiv@divisor+1,w
  3155  0FE2  1C03               	skipc
  3156  0FE3  03F9               	decf	___awdiv@dividend+1,f
  3157  0FE4  02F9               	subwf	___awdiv@dividend+1,f
  3158  0FE5  1422               	bsf	___awdiv@quotient,0
  3159  0FE6                     l1421:	
  3160  0FE6  3001               	movlw	1
  3161  0FE7                     u1555:	
  3162  0FE7  1003               	clrc
  3163  0FE8  0CF7               	rrf	___awdiv@divisor+1,f
  3164  0FE9  0CF6               	rrf	___awdiv@divisor,f
  3165  0FEA  3EFF               	addlw	-1
  3166  0FEB  1D03               	skipz
  3167  0FEC  2FE7               	goto	u1555
  3168  0FED  3001               	movlw	1
  3169  0FEE  02A0               	subwf	___awdiv@counter,f
  3170  0FEF  1D03               	btfss	3,2
  3171  0FF0  2FD0               	goto	l1415
  3172  0FF1                     l1425:	
  3173  0FF1  0821               	movf	___awdiv@sign,w
  3174  0FF2  1903               	btfsc	3,2
  3175  0FF3  2FF9               	goto	l1429
  3176  0FF4  09A2               	comf	___awdiv@quotient,f
  3177  0FF5  09A3               	comf	___awdiv@quotient+1,f
  3178  0FF6  0AA2               	incf	___awdiv@quotient,f
  3179  0FF7  1903               	skipnz
  3180  0FF8  0AA3               	incf	___awdiv@quotient+1,f
  3181  0FF9                     l1429:	
  3182  0FF9  0823               	movf	___awdiv@quotient+1,w
  3183  0FFA  01F7               	clrf	?___awdiv+1
  3184  0FFB  07F7               	addwf	?___awdiv+1,f
  3185  0FFC  0822               	movf	___awdiv@quotient,w
  3186  0FFD  01F6               	clrf	?___awdiv
  3187  0FFE  07F6               	addwf	?___awdiv,f
  3188  0FFF  0008               	return
  3189  1000                     __end_of___awdiv:	
  3190                           
  3191                           	psect	text14
  3192  0355                     __ptext14:	
  3193 ;; *************** function ___aldiv *****************
  3194 ;; Defined at:
  3195 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\aldiv.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  divisor         4    0[COMMON] long 
  3198 ;;  dividend        4    4[COMMON] long 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  quotient        4    2[BANK0 ] long 
  3201 ;;  sign            1    1[BANK0 ] unsigned char 
  3202 ;;  counter         1    0[BANK0 ] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  4    0[COMMON] long 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         8       0       0       0       0
  3213 ;;      Locals:         0       6       0       0       0
  3214 ;;      Temps:          1       0       0       0       0
  3215 ;;      Totals:         9       6       0       0       0
  3216 ;;Total ram usage:       15 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_setPwmRC1
  3222 ;;		_setPwmRC2
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function ___aldiv
  3228  0355                     ___aldiv:	
  3229                           
  3230                           ;incstack = 0
  3231                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3232  0355  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0356  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0357  01A1               	clrf	___aldiv@sign
  3235  0358  1FF3               	btfss	___aldiv@divisor+3,7
  3236  0359  2B67               	goto	l349
  3237  035A  09F0               	comf	___aldiv@divisor,f
  3238  035B  09F1               	comf	___aldiv@divisor+1,f
  3239  035C  09F2               	comf	___aldiv@divisor+2,f
  3240  035D  09F3               	comf	___aldiv@divisor+3,f
  3241  035E  0AF0               	incf	___aldiv@divisor,f
  3242  035F  1903               	skipnz
  3243  0360  0AF1               	incf	___aldiv@divisor+1,f
  3244  0361  1903               	skipnz
  3245  0362  0AF2               	incf	___aldiv@divisor+2,f
  3246  0363  1903               	skipnz
  3247  0364  0AF3               	incf	___aldiv@divisor+3,f
  3248  0365  01A1               	clrf	___aldiv@sign
  3249  0366  0AA1               	incf	___aldiv@sign,f
  3250  0367                     l349:	
  3251  0367  1FF7               	btfss	___aldiv@dividend+3,7
  3252  0368  2B78               	goto	l1359
  3253  0369  09F4               	comf	___aldiv@dividend,f
  3254  036A  09F5               	comf	___aldiv@dividend+1,f
  3255  036B  09F6               	comf	___aldiv@dividend+2,f
  3256  036C  09F7               	comf	___aldiv@dividend+3,f
  3257  036D  0AF4               	incf	___aldiv@dividend,f
  3258  036E  1903               	skipnz
  3259  036F  0AF5               	incf	___aldiv@dividend+1,f
  3260  0370  1903               	skipnz
  3261  0371  0AF6               	incf	___aldiv@dividend+2,f
  3262  0372  1903               	skipnz
  3263  0373  0AF7               	incf	___aldiv@dividend+3,f
  3264  0374  3001               	movlw	1
  3265  0375  00F8               	movwf	??___aldiv
  3266  0376  0878               	movf	??___aldiv,w
  3267  0377  06A1               	xorwf	___aldiv@sign,f
  3268  0378                     l1359:	
  3269  0378  3000               	movlw	0
  3270  0379  00A5               	movwf	___aldiv@quotient+3
  3271  037A  3000               	movlw	0
  3272  037B  00A4               	movwf	___aldiv@quotient+2
  3273  037C  3000               	movlw	0
  3274  037D  00A3               	movwf	___aldiv@quotient+1
  3275  037E  3000               	movlw	0
  3276  037F  00A2               	movwf	___aldiv@quotient
  3277  0380  0873               	movf	___aldiv@divisor+3,w
  3278  0381  0472               	iorwf	___aldiv@divisor+2,w
  3279  0382  0471               	iorwf	___aldiv@divisor+1,w
  3280  0383  0470               	iorwf	___aldiv@divisor,w
  3281  0384  1903               	skipnz
  3282  0385  2BCD               	goto	l1381
  3283  0386  01A0               	clrf	___aldiv@counter
  3284  0387  0AA0               	incf	___aldiv@counter,f
  3285  0388                     l1367:	
  3286  0388  1BF3               	btfsc	___aldiv@divisor+3,7
  3287  0389  2B98               	goto	l1369
  3288  038A  3001               	movlw	1
  3289  038B  00F8               	movwf	??___aldiv
  3290  038C                     u1415:	
  3291  038C  1003               	clrc
  3292  038D  0DF0               	rlf	___aldiv@divisor,f
  3293  038E  0DF1               	rlf	___aldiv@divisor+1,f
  3294  038F  0DF2               	rlf	___aldiv@divisor+2,f
  3295  0390  0DF3               	rlf	___aldiv@divisor+3,f
  3296  0391  0BF8               	decfsz	??___aldiv,f
  3297  0392  2B8C               	goto	u1415
  3298  0393  3001               	movlw	1
  3299  0394  00F8               	movwf	??___aldiv
  3300  0395  0878               	movf	??___aldiv,w
  3301  0396  07A0               	addwf	___aldiv@counter,f
  3302  0397  2B88               	goto	l1367
  3303  0398                     l1369:	
  3304  0398  3001               	movlw	1
  3305  0399  00F8               	movwf	??___aldiv
  3306  039A                     u1435:	
  3307  039A  1003               	clrc
  3308  039B  0DA2               	rlf	___aldiv@quotient,f
  3309  039C  0DA3               	rlf	___aldiv@quotient+1,f
  3310  039D  0DA4               	rlf	___aldiv@quotient+2,f
  3311  039E  0DA5               	rlf	___aldiv@quotient+3,f
  3312  039F  0BF8               	decfsz	??___aldiv,f
  3313  03A0  2B9A               	goto	u1435
  3314  03A1  0873               	movf	___aldiv@divisor+3,w
  3315  03A2  0277               	subwf	___aldiv@dividend+3,w
  3316  03A3  1D03               	skipz
  3317  03A4  2BAF               	goto	u1445
  3318  03A5  0872               	movf	___aldiv@divisor+2,w
  3319  03A6  0276               	subwf	___aldiv@dividend+2,w
  3320  03A7  1D03               	skipz
  3321  03A8  2BAF               	goto	u1445
  3322  03A9  0871               	movf	___aldiv@divisor+1,w
  3323  03AA  0275               	subwf	___aldiv@dividend+1,w
  3324  03AB  1D03               	skipz
  3325  03AC  2BAF               	goto	u1445
  3326  03AD  0870               	movf	___aldiv@divisor,w
  3327  03AE  0274               	subwf	___aldiv@dividend,w
  3328  03AF                     u1445:	
  3329  03AF  1C03               	skipc
  3330  03B0  2BC0               	goto	l1377
  3331  03B1  0870               	movf	___aldiv@divisor,w
  3332  03B2  02F4               	subwf	___aldiv@dividend,f
  3333  03B3  0871               	movf	___aldiv@divisor+1,w
  3334  03B4  1C03               	skipc
  3335  03B5  0F71               	incfsz	___aldiv@divisor+1,w
  3336  03B6  02F5               	subwf	___aldiv@dividend+1,f
  3337  03B7  0872               	movf	___aldiv@divisor+2,w
  3338  03B8  1C03               	skipc
  3339  03B9  0F72               	incfsz	___aldiv@divisor+2,w
  3340  03BA  02F6               	subwf	___aldiv@dividend+2,f
  3341  03BB  0873               	movf	___aldiv@divisor+3,w
  3342  03BC  1C03               	skipc
  3343  03BD  0F73               	incfsz	___aldiv@divisor+3,w
  3344  03BE  02F7               	subwf	___aldiv@dividend+3,f
  3345  03BF  1422               	bsf	___aldiv@quotient,0
  3346  03C0                     l1377:	
  3347  03C0  3001               	movlw	1
  3348  03C1                     u1455:	
  3349  03C1  1003               	clrc
  3350  03C2  0CF3               	rrf	___aldiv@divisor+3,f
  3351  03C3  0CF2               	rrf	___aldiv@divisor+2,f
  3352  03C4  0CF1               	rrf	___aldiv@divisor+1,f
  3353  03C5  0CF0               	rrf	___aldiv@divisor,f
  3354  03C6  3EFF               	addlw	-1
  3355  03C7  1D03               	skipz
  3356  03C8  2BC1               	goto	u1455
  3357  03C9  3001               	movlw	1
  3358  03CA  02A0               	subwf	___aldiv@counter,f
  3359  03CB  1D03               	btfss	3,2
  3360  03CC  2B98               	goto	l1369
  3361  03CD                     l1381:	
  3362  03CD  0821               	movf	___aldiv@sign,w
  3363  03CE  1903               	btfsc	3,2
  3364  03CF  2BDB               	goto	l1385
  3365  03D0  09A2               	comf	___aldiv@quotient,f
  3366  03D1  09A3               	comf	___aldiv@quotient+1,f
  3367  03D2  09A4               	comf	___aldiv@quotient+2,f
  3368  03D3  09A5               	comf	___aldiv@quotient+3,f
  3369  03D4  0AA2               	incf	___aldiv@quotient,f
  3370  03D5  1903               	skipnz
  3371  03D6  0AA3               	incf	___aldiv@quotient+1,f
  3372  03D7  1903               	skipnz
  3373  03D8  0AA4               	incf	___aldiv@quotient+2,f
  3374  03D9  1903               	skipnz
  3375  03DA  0AA5               	incf	___aldiv@quotient+3,f
  3376  03DB                     l1385:	
  3377  03DB  0825               	movf	___aldiv@quotient+3,w
  3378  03DC  00F3               	movwf	?___aldiv+3
  3379  03DD  0824               	movf	___aldiv@quotient+2,w
  3380  03DE  00F2               	movwf	?___aldiv+2
  3381  03DF  0823               	movf	___aldiv@quotient+1,w
  3382  03E0  00F1               	movwf	?___aldiv+1
  3383  03E1  0822               	movf	___aldiv@quotient,w
  3384  03E2  00F0               	movwf	?___aldiv
  3385  03E3  0008               	return
  3386  03E4                     __end_of___aldiv:	
  3387                           
  3388                           	psect	text15
  3389  0EA7                     __ptext15:	
  3390 ;; *************** function ___bmul *****************
  3391 ;; Defined at:
  3392 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\Umul8.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  multiplier      1    wreg     unsigned char 
  3395 ;;  multiplicand    1    0[COMMON] unsigned char 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  multiplier      1    3[COMMON] unsigned char 
  3398 ;;  product         1    2[COMMON] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      unsigned char 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         1       0       0       0       0
  3409 ;;      Locals:         2       0       0       0       0
  3410 ;;      Temps:          1       0       0       0       0
  3411 ;;      Totals:         4       0       0       0       0
  3412 ;;Total ram usage:        4 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_motor
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function ___bmul
  3423  0EA7                     ___bmul:	
  3424                           
  3425                           ;incstack = 0
  3426                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3427                           ;___bmul@multiplier stored from wreg
  3428  0EA7  00F3               	movwf	___bmul@multiplier
  3429  0EA8  01F2               	clrf	___bmul@product
  3430  0EA9                     l1467:	
  3431  0EA9  1C73               	btfss	___bmul@multiplier,0
  3432  0EAA  2EAF               	goto	l1471
  3433  0EAB  0870               	movf	___bmul@multiplicand,w
  3434  0EAC  00F1               	movwf	??___bmul
  3435  0EAD  0871               	movf	??___bmul,w
  3436  0EAE  07F2               	addwf	___bmul@product,f
  3437  0EAF                     l1471:	
  3438  0EAF  1003               	clrc
  3439  0EB0  0DF0               	rlf	___bmul@multiplicand,f
  3440  0EB1  1003               	clrc
  3441  0EB2  0CF3               	rrf	___bmul@multiplier,f
  3442  0EB3  08F3               	movf	___bmul@multiplier,f
  3443  0EB4  1D03               	skipz
  3444  0EB5  2EA9               	goto	l1467
  3445  0EB6  0872               	movf	___bmul@product,w
  3446  0EB7  0008               	return
  3447  0EB8                     __end_of___bmul:	
  3448                           
  3449                           	psect	text16
  3450  0F3C                     __ptext16:	
  3451 ;; *************** function _lcdPutstr *****************
  3452 ;; Defined at:
  3453 ;;		line 71 in file "lcd.h"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  s               1    wreg     PTR const unsigned char 
  3456 ;;		 -> STR_12(9), STR_11(9), STR_10(9), STR_9(9), 
  3457 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  3458 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  s               1    4[COMMON] PTR const unsigned char 
  3461 ;;		 -> STR_12(9), STR_11(9), STR_10(9), STR_9(9), 
  3462 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  3463 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         0       0       0       0       0
  3474 ;;      Locals:         1       0       0       0       0
  3475 ;;      Temps:          1       0       0       0       0
  3476 ;;      Totals:         2       0       0       0       0
  3477 ;;Total ram usage:        2 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    1
  3480 ;; This function calls:
  3481 ;;		_lcdWrite
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _lcdPutstr
  3489  0F3C                     _lcdPutstr:	
  3490                           
  3491                           ;incstack = 0
  3492                           ; Regs used in _lcdPutstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3493                           ;lcdPutstr@s stored from wreg
  3494  0F3C  00F4               	movwf	lcdPutstr@s
  3495  0F3D                     l1687:	
  3496                           ;lcd.h: 73: while(*s >= ' ' && *s <= '~') lcdWrite(1, *s++);
  3497                           
  3498  0F3D  0874               	movf	lcdPutstr@s,w
  3499  0F3E  0084               	movwf	4
  3500  0F3F  120A  118A  2003  120A  158A  	fcall	stringdir
  3501  0F44  00F3               	movwf	??_lcdPutstr
  3502  0F45  3020               	movlw	32
  3503  0F46  0273               	subwf	??_lcdPutstr,w
  3504  0F47  1C03               	skipc
  3505  0F48  0008               	return
  3506  0F49  0874               	movf	lcdPutstr@s,w
  3507  0F4A  0084               	movwf	4
  3508  0F4B  120A  118A  2003  120A  158A  	fcall	stringdir
  3509  0F50  00F3               	movwf	??_lcdPutstr
  3510  0F51  307F               	movlw	127
  3511  0F52  0273               	subwf	??_lcdPutstr,w
  3512  0F53  1803               	btfsc	3,0
  3513  0F54  0008               	return
  3514  0F55  0874               	movf	lcdPutstr@s,w
  3515  0F56  0084               	movwf	4
  3516  0F57  120A  118A  2003  120A  158A  	fcall	stringdir
  3517  0F5C  00F3               	movwf	??_lcdPutstr
  3518  0F5D  0873               	movf	??_lcdPutstr,w
  3519  0F5E  00F0               	movwf	lcdWrite@data
  3520  0F5F  3001               	movlw	1
  3521  0F60  120A  158A  26B8  120A  158A  	fcall	_lcdWrite
  3522  0F65  3001               	movlw	1
  3523  0F66  00F3               	movwf	??_lcdPutstr
  3524  0F67  0873               	movf	??_lcdPutstr,w
  3525  0F68  07F4               	addwf	lcdPutstr@s,f
  3526  0F69  2F3D               	goto	l1687
  3527  0F6A                     __end_of_lcdPutstr:	
  3528                           
  3529                           	psect	text17
  3530  00A8                     __ptext17:	
  3531 ;; *************** function _lcdInit *****************
  3532 ;; Defined at:
  3533 ;;		line 34 in file "lcd.h"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0, pclath, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3547 ;;      Params:         0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0
  3549 ;;      Temps:          2       0       0       0       0
  3550 ;;      Totals:         2       0       0       0       0
  3551 ;;Total ram usage:        2 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    1
  3554 ;; This function calls:
  3555 ;;		_lcdWrite
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function _lcdInit
  3563  00A8                     _lcdInit:	
  3564                           
  3565                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
  3566                           
  3567                           ;incstack = 0
  3568                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  3569  00A8  3034               	movlw	52
  3570  00A9  00F4               	movwf	??_lcdInit+1
  3571  00AA  30F1               	movlw	241
  3572  00AB  00F3               	movwf	??_lcdInit
  3573  00AC                     u2387:	
  3574  00AC  0BF3               	decfsz	??_lcdInit,f
  3575  00AD  28AC               	goto	u2387
  3576  00AE  0BF4               	decfsz	??_lcdInit+1,f
  3577  00AF  28AC               	goto	u2387
  3578  00B0  28B1               	nop2
  3579                           
  3580                           ;lcd.h: 37: lcdWrite(0, 0x30);
  3581  00B1  3030               	movlw	48
  3582  00B2  00F3               	movwf	??_lcdInit
  3583  00B3  0873               	movf	??_lcdInit,w
  3584  00B4  00F0               	movwf	lcdWrite@data
  3585  00B5  3000               	movlw	0
  3586  00B6  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3587                           
  3588                           ;lcd.h: 38: lcdWrite(0, 0x30);
  3589  00BB  3030               	movlw	48
  3590  00BC  00F3               	movwf	??_lcdInit
  3591  00BD  0873               	movf	??_lcdInit,w
  3592  00BE  00F0               	movwf	lcdWrite@data
  3593  00BF  3000               	movlw	0
  3594  00C0  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3595                           
  3596                           ;lcd.h: 39: lcdWrite(0, 0x30);
  3597  00C5  3030               	movlw	48
  3598  00C6  00F3               	movwf	??_lcdInit
  3599  00C7  0873               	movf	??_lcdInit,w
  3600  00C8  00F0               	movwf	lcdWrite@data
  3601  00C9  3000               	movlw	0
  3602  00CA  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3603                           
  3604                           ;lcd.h: 40: lcdWrite(0, 0x38);
  3605  00CF  3038               	movlw	56
  3606  00D0  00F3               	movwf	??_lcdInit
  3607  00D1  0873               	movf	??_lcdInit,w
  3608  00D2  00F0               	movwf	lcdWrite@data
  3609  00D3  3000               	movlw	0
  3610  00D4  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3611                           
  3612                           ;lcd.h: 41: lcdWrite(0, 0x0C);
  3613  00D9  300C               	movlw	12
  3614  00DA  00F3               	movwf	??_lcdInit
  3615  00DB  0873               	movf	??_lcdInit,w
  3616  00DC  00F0               	movwf	lcdWrite@data
  3617  00DD  3000               	movlw	0
  3618  00DE  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3619                           
  3620                           ;lcd.h: 42: lcdWrite(0, 0x01);
  3621  00E3  01F0               	clrf	lcdWrite@data
  3622  00E4  0AF0               	incf	lcdWrite@data,f
  3623  00E5  3000               	movlw	0
  3624  00E6  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3625                           
  3626                           ;lcd.h: 43: lcdWrite(0, 0x06);
  3627  00EB  3006               	movlw	6
  3628  00EC  00F3               	movwf	??_lcdInit
  3629  00ED  0873               	movf	??_lcdInit,w
  3630  00EE  00F0               	movwf	lcdWrite@data
  3631  00EF  3000               	movlw	0
  3632  00F0  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3633                           
  3634                           ;lcd.h: 44: lcdWrite(0, 0x02);
  3635  00F5  3002               	movlw	2
  3636  00F6  00F3               	movwf	??_lcdInit
  3637  00F7  0873               	movf	??_lcdInit,w
  3638  00F8  00F0               	movwf	lcdWrite@data
  3639  00F9  3000               	movlw	0
  3640  00FA  120A  158A  26B8  120A  118A  	fcall	_lcdWrite
  3641                           
  3642                           ;lcd.h: 45: _delay((unsigned long)((2)*(8000000/4000.0)));
  3643  00FF  3006               	movlw	6
  3644  0100  00F4               	movwf	??_lcdInit+1
  3645  0101  3030               	movlw	48
  3646  0102  00F3               	movwf	??_lcdInit
  3647  0103                     u2397:	
  3648  0103  0BF3               	decfsz	??_lcdInit,f
  3649  0104  2903               	goto	u2397
  3650  0105  0BF4               	decfsz	??_lcdInit+1,f
  3651  0106  2903               	goto	u2397
  3652  0107  0000               	nop
  3653  0108  0008               	return
  3654  0109                     __end_of_lcdInit:	
  3655                           
  3656                           	psect	text18
  3657  0F6A                     __ptext18:	
  3658 ;; *************** function _lcdGoto *****************
  3659 ;; Defined at:
  3660 ;;		line 56 in file "lcd.h"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  row             1    wreg     unsigned char 
  3663 ;;  col             1    3[COMMON] unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  row             1    5[COMMON] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;		None               void
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         1       0       0       0       0
  3676 ;;      Locals:         1       0       0       0       0
  3677 ;;      Temps:          1       0       0       0       0
  3678 ;;      Totals:         3       0       0       0       0
  3679 ;;Total ram usage:        3 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    1
  3682 ;; This function calls:
  3683 ;;		_lcdWrite
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _lcdGoto
  3691  0F6A                     _lcdGoto:	
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in _lcdGoto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3695                           ;lcdGoto@row stored from wreg
  3696  0F6A  00F5               	movwf	lcdGoto@row
  3697                           
  3698                           ;lcd.h: 58: switch(row)
  3699  0F6B  2F94               	goto	l1679
  3700  0F6C                     l1669:	
  3701                           ;lcd.h: 59: {
  3702                           ;lcd.h: 60: case 1: lcdWrite(0, 0x80 + col - 1);
  3703                           
  3704  0F6C  0873               	movf	lcdGoto@col,w
  3705  0F6D  3E7F               	addlw	127
  3706  0F6E  00F4               	movwf	??_lcdGoto
  3707  0F6F  0874               	movf	??_lcdGoto,w
  3708  0F70  00F0               	movwf	lcdWrite@data
  3709  0F71  3000               	movlw	0
  3710  0F72  120A  158A  26B8   	fcall	_lcdWrite
  3711                           
  3712                           ;lcd.h: 61: break;
  3713  0F75  0008               	return
  3714  0F76                     l1671:	
  3715                           ;lcd.h: 62: case 2: lcdWrite(0, 0xC0 + col - 1);
  3716                           
  3717  0F76  0873               	movf	lcdGoto@col,w
  3718  0F77  3EBF               	addlw	191
  3719  0F78  00F4               	movwf	??_lcdGoto
  3720  0F79  0874               	movf	??_lcdGoto,w
  3721  0F7A  00F0               	movwf	lcdWrite@data
  3722  0F7B  3000               	movlw	0
  3723  0F7C  120A  158A  26B8   	fcall	_lcdWrite
  3724                           
  3725                           ;lcd.h: 63: break;
  3726  0F7F  0008               	return
  3727  0F80                     l1673:	
  3728                           ;lcd.h: 64: case 3: lcdWrite(0, 0x94 + col - 1);
  3729                           
  3730  0F80  0873               	movf	lcdGoto@col,w
  3731  0F81  3E93               	addlw	147
  3732  0F82  00F4               	movwf	??_lcdGoto
  3733  0F83  0874               	movf	??_lcdGoto,w
  3734  0F84  00F0               	movwf	lcdWrite@data
  3735  0F85  3000               	movlw	0
  3736  0F86  120A  158A  26B8   	fcall	_lcdWrite
  3737                           
  3738                           ;lcd.h: 65: break;
  3739  0F89  0008               	return
  3740  0F8A                     l1675:	
  3741                           ;lcd.h: 66: case 4: lcdWrite(0, 0xD4 + col - 1);
  3742                           
  3743  0F8A  0873               	movf	lcdGoto@col,w
  3744  0F8B  3ED3               	addlw	211
  3745  0F8C  00F4               	movwf	??_lcdGoto
  3746  0F8D  0874               	movf	??_lcdGoto,w
  3747  0F8E  00F0               	movwf	lcdWrite@data
  3748  0F8F  3000               	movlw	0
  3749  0F90  120A  158A  26B8   	fcall	_lcdWrite
  3750                           
  3751                           ;lcd.h: 68: }
  3752                           
  3753                           ;lcd.h: 67: break;
  3754  0F93  0008               	return
  3755  0F94                     l1679:	
  3756  0F94  0875               	movf	lcdGoto@row,w
  3757                           
  3758                           ; Switch size 1, requested type "space"
  3759                           ; Number of cases is 4, Range of values is 1 to 4
  3760                           ; switch strategies available:
  3761                           ; Name         Instructions Cycles
  3762                           ; simple_byte           13     7 (average)
  3763                           ; direct_byte           23    11 (fixed)
  3764                           ; jumptable            263     9 (fixed)
  3765                           ;	Chosen strategy is simple_byte
  3766  0F95  3A01               	xorlw	1	; case 1
  3767  0F96  1903               	skipnz
  3768  0F97  2F6C               	goto	l1669
  3769  0F98  3A03               	xorlw	3	; case 2
  3770  0F99  1903               	skipnz
  3771  0F9A  2F76               	goto	l1671
  3772  0F9B  3A01               	xorlw	1	; case 3
  3773  0F9C  1903               	skipnz
  3774  0F9D  2F80               	goto	l1673
  3775  0F9E  3A07               	xorlw	7	; case 4
  3776  0F9F  1903               	skipnz
  3777  0FA0  2F8A               	goto	l1675
  3778  0FA1  2FA2               	goto	l105
  3779  0FA2                     l105:	
  3780  0FA2  0008               	return
  3781  0FA3                     __end_of_lcdGoto:	
  3782                           
  3783                           	psect	text19
  3784  0EB8                     __ptext19:	
  3785 ;; *************** function _lcdWrite *****************
  3786 ;; Defined at:
  3787 ;;		line 48 in file "lcd.h"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  rs              1    wreg     unsigned char 
  3790 ;;  data            1    0[COMMON] unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  rs              1    2[COMMON] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;		None               void
  3795 ;; Registers used:
  3796 ;;		wreg
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         1       0       0       0       0
  3803 ;;      Locals:         1       0       0       0       0
  3804 ;;      Temps:          1       0       0       0       0
  3805 ;;      Totals:         3       0       0       0       0
  3806 ;;Total ram usage:        3 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_lcdInit
  3812 ;;		_lcdGoto
  3813 ;;		_lcdPutstr
  3814 ;;		_main
  3815 ;;		_lcdNumber
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function _lcdWrite
  3821  0EB8                     _lcdWrite:	
  3822                           
  3823                           ;incstack = 0
  3824                           ; Regs used in _lcdWrite: [wreg]
  3825                           ;lcdWrite@rs stored from wreg
  3826  0EB8  00F2               	movwf	lcdWrite@rs
  3827                           
  3828                           ;lcd.h: 50: RB6 = rs;
  3829  0EB9  1C72               	btfss	lcdWrite@rs,0
  3830  0EBA  2EBF               	goto	u1580
  3831  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0EBD  1706               	bsf	6,6	;volatile
  3834  0EBE  2EC2               	goto	l1435
  3835  0EBF                     u1580:	
  3836  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0EC1  1306               	bcf	6,6	;volatile
  3839  0EC2                     l1435:	
  3840                           
  3841                           ;lcd.h: 51: PORTD = data;
  3842  0EC2  0870               	movf	lcdWrite@data,w
  3843  0EC3  0088               	movwf	8	;volatile
  3844                           
  3845                           ;lcd.h: 52: ((RE2=1), _delay((unsigned long)((2)*(8000000/4000000.0))), (RE2=0), _delay(
      +                          (unsigned long)((2)*(8000000/4000000.0))));
  3846  0EC4  1509               	bsf	9,2	;volatile
  3847  0EC5  2EC6               	nop2	;2 cycle nop
  3848  0EC6  2EC7               	nop2	;2 cycle nop
  3849  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0EC9  1109               	bcf	9,2	;volatile
  3852  0ECA  2ECB               	nop2	;2 cycle nop
  3853  0ECB  2ECC               	nop2	;2 cycle nop
  3854                           
  3855                           ;lcd.h: 53: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3856  0ECC  301A               	movlw	26
  3857  0ECD  00F1               	movwf	??_lcdWrite
  3858  0ECE                     u2407:	
  3859  0ECE  0BF1               	decfsz	??_lcdWrite,f
  3860  0ECF  2ECE               	goto	u2407
  3861  0ED0  0000               	nop
  3862  0ED1  0008               	return
  3863  0ED2                     __end_of_lcdWrite:	
  3864                           
  3865                           	psect	text20
  3866  0067                     __ptext20:	
  3867 ;; *************** function _beep *****************
  3868 ;; Defined at:
  3869 ;;		line 171 in file "main.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  times           1    wreg     unsigned char 
  3872 ;;  delayMs         2    0[COMMON] unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  times           1    4[COMMON] unsigned char 
  3875 ;;  loop            2    5[COMMON] unsigned int 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;		None               void
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3885 ;;      Params:         2       0       0       0       0
  3886 ;;      Locals:         3       0       0       0       0
  3887 ;;      Temps:          2       0       0       0       0
  3888 ;;      Totals:         7       0       0       0       0
  3889 ;;Total ram usage:        7 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _beep
  3900  0067                     _beep:	
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in _beep: [wreg+status,2+status,0]
  3904                           ;beep@times stored from wreg
  3905  0067  00F4               	movwf	beep@times
  3906  0068                     L8:	
  3907                           
  3908                           ;main.c: 173: uInt loop;
  3909                           ;main.c: 174: for(; times > 0; times--)
  3910  0068  08F4               	movf	beep@times,f
  3911  0069  1903               	btfsc	3,2
  3912  006A  0008               	return
  3913                           
  3914                           ;main.c: 175: {
  3915                           ;main.c: 176: RB7 = 1;
  3916  006B  1283               	bcf	3,5	;RP0=0, select bank0
  3917  006C  1303               	bcf	3,6	;RP1=0, select bank0
  3918  006D  1786               	bsf	6,7	;volatile
  3919                           
  3920                           ;main.c: 177: for(loop = 0; loop < delayMs; loop++) _delay((unsigned long)((1)*(8000000/
      +                          4000.0)));
  3921  006E  01F5               	clrf	beep@loop
  3922  006F  01F6               	clrf	beep@loop+1
  3923  0070                     l189:	
  3924  0070  0871               	movf	beep@delayMs+1,w
  3925  0071  0276               	subwf	beep@loop+1,w
  3926  0072  1D03               	skipz
  3927  0073  2876               	goto	u2155
  3928  0074  0870               	movf	beep@delayMs,w
  3929  0075  0275               	subwf	beep@loop,w
  3930  0076                     u2155:	
  3931  0076  1803               	btfsc	3,0
  3932  0077  2888               	goto	l191
  3933  0078  3003               	movlw	3
  3934  0079  00F3               	movwf	??_beep+1
  3935  007A  3097               	movlw	151
  3936  007B  00F2               	movwf	??_beep
  3937  007C                     u2417:	
  3938  007C  0BF2               	decfsz	??_beep,f
  3939  007D  287C               	goto	u2417
  3940  007E  0BF3               	decfsz	??_beep+1,f
  3941  007F  287C               	goto	u2417
  3942  0080  2881               	nop2
  3943  0081  3001               	movlw	1
  3944  0082  07F5               	addwf	beep@loop,f
  3945  0083  1803               	skipnc
  3946  0084  0AF6               	incf	beep@loop+1,f
  3947  0085  3000               	movlw	0
  3948  0086  07F6               	addwf	beep@loop+1,f
  3949  0087  2870               	goto	l189
  3950  0088                     l191:	
  3951                           
  3952                           ;main.c: 178: RB7 = 0;
  3953  0088  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0089  1303               	bcf	3,6	;RP1=0, select bank0
  3955  008A  1386               	bcf	6,7	;volatile
  3956                           
  3957                           ;main.c: 179: for(loop = 0; loop < delayMs; loop++) _delay((unsigned long)((1)*(8000000/
      +                          4000.0)));
  3958  008B  01F5               	clrf	beep@loop
  3959  008C  01F6               	clrf	beep@loop+1
  3960  008D                     l192:	
  3961  008D  0871               	movf	beep@delayMs+1,w
  3962  008E  0276               	subwf	beep@loop+1,w
  3963  008F  1D03               	skipz
  3964  0090  2893               	goto	u2165
  3965  0091  0870               	movf	beep@delayMs,w
  3966  0092  0275               	subwf	beep@loop,w
  3967  0093                     u2165:	
  3968  0093  1803               	btfsc	3,0
  3969  0094  28A5               	goto	l1737
  3970  0095  3003               	movlw	3
  3971  0096  00F3               	movwf	??_beep+1
  3972  0097  3097               	movlw	151
  3973  0098  00F2               	movwf	??_beep
  3974  0099                     u2427:	
  3975  0099  0BF2               	decfsz	??_beep,f
  3976  009A  2899               	goto	u2427
  3977  009B  0BF3               	decfsz	??_beep+1,f
  3978  009C  2899               	goto	u2427
  3979  009D  289E               	nop2
  3980  009E  3001               	movlw	1
  3981  009F  07F5               	addwf	beep@loop,f
  3982  00A0  1803               	skipnc
  3983  00A1  0AF6               	incf	beep@loop+1,f
  3984  00A2  3000               	movlw	0
  3985  00A3  07F6               	addwf	beep@loop+1,f
  3986  00A4  288D               	goto	l192
  3987  00A5                     l1737:	
  3988  00A5  3001               	movlw	1
  3989  00A6  02F4               	subwf	beep@times,f
  3990  00A7  2868               	goto	L8
  3991  00A8                     __end_of_beep:	
  3992  007E                     btemp	set	126	;btemp
  3993  007E                     wtemp	set	126
  3994  007E                     wtemp0	set	126
  3995  0080                     wtemp1	set	128
  3996  0082                     wtemp2	set	130
  3997  0084                     wtemp3	set	132
  3998  0086                     wtemp4	set	134
  3999  0088                     wtemp5	set	136
  4000  007F                     wtemp6	set	127
  4001  007E                     ttemp	set	126
  4002  007E                     ttemp0	set	126
  4003  0081                     ttemp1	set	129
  4004  0084                     ttemp2	set	132
  4005  0087                     ttemp3	set	135
  4006  007F                     ttemp4	set	127
  4007  007E                     ltemp	set	126
  4008  007E                     ltemp0	set	126
  4009  0082                     ltemp1	set	130
  4010  0086                     ltemp2	set	134
  4011  0080                     ltemp3	set	128


Data Sizes:
    Strings     90
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcdPutstr@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[9]), 
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _uartInit->___lltoft
    ___lltoft->___ftpack
    ___fttol->___lltoft
    ___ftdiv->___lltoft
    ___ftadd->___lltoft
    _motor->_setPwmRC1
    _motor->_setPwmRC2
    _setPwmRC2->___awdiv
    _setPwmRC1->___awdiv
    ___awdiv->___wmul
    _lcdPutstr->_lcdWrite
    _lcdInit->_lcdWrite
    _lcdGoto->_lcdWrite

Critical Paths under _main in BANK0

    _main->_uartInit
    _uartInit->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftdiv
    _motor->_setPwmRC1
    _motor->_setPwmRC2
    _setPwmRC2->___aldiv
    _setPwmRC1->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16875
                                             50 BANK0      3     3      0
                               _beep
                            _lcdGoto
                            _lcdInit
                          _lcdPutstr
                           _lcdWrite
                              _motor
                            _picInit
                           _uartInit
                        _uartReceive
 ---------------------------------------------------------------------------------
 (1) _uartReceive                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uartInit                                            10     6      4    7540
                                             43 BANK0      7     3      4
                            ___ftadd
                            ___ftdiv
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1821
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             29 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2350
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2778
                                             16 BANK0     13     7      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1646
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _picInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor                                                6     5      1    4382
                                             10 BANK0      6     5      1
                             ___bmul
                          _setPwmRC1
                          _setPwmRC2
 ---------------------------------------------------------------------------------
 (2) _setPwmRC2                                            7     3      4    1735
                                             11 COMMON     3     3      0
                                              6 BANK0      4     0      4
                            ___aldiv
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setPwmRC1                                            7     3      4    1735
                                             11 COMMON     3     3      0
                                              6 BANK0      4     0      4
                            ___aldiv
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     724
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcdPutstr                                            2     2      0    1283
                                              3 COMMON     2     2      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     892
                                              3 COMMON     2     2      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _lcdGoto                                              3     2      1    1585
                                              3 COMMON     3     2      1
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _lcdWrite                                             3     2      1     892
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _beep                                                 7     5      2     190
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
   _lcdGoto
     _lcdWrite
   _lcdInit
     _lcdWrite
   _lcdPutstr
     _lcdWrite
   _lcdWrite
   _motor
     ___bmul
     _setPwmRC1
       ___aldiv
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _setPwmRC2
       ___aldiv
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _picInit
   _uartInit
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
   _uartReceive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      35       5       66.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Apr 16 21:40:48 2015

        uartInit@baudrate 004B                         pc 0002            ___bmul@product 0072  
             __CFG_CP$OFF 0000              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072              lcdWrite@data 0070              ___ftadd@exp1 003C  
            ___ftadd@exp2 003B              ___ftadd@sign 003A                       l105 0FA2  
                     l205 02B0                       l146 0EA3                       l191 0088  
                     l192 008D                       l189 0070                       l349 0367  
                     l461 0158                       l294 0EF8                       l199 0272  
                     l455 013F                       l484 0634                       _RB2 0032  
                     _RB3 0033                       _RB4 0034                       _RB5 0035  
                     _RB6 0036                       _RB7 0037                       _RE2 004A  
                     _PR2 0092              __CFG_CPD$OFF 0000                       _RX9 00C6  
                     _TX9 04C6                       fsr0 0004              __CFG_LVP$OFF 0000  
            ___ftdiv@cntr 002A              ___ftdiv@sign 002F                      l1403 0FBA  
                    l1331 0129                      l1323 0111                      l1421 0FE6  
                    l1413 0FC2                      l1309 0EF0                      l1415 0FD0  
                    l1327 0118                      l1511 05E5                      l1425 0FF1  
                    l1337 0144                      l1329 0124                      l1521 060B  
                    l1601 02E1                      l1435 0EC2                      l1339 014E  
                    l1531 0630                      l1523 060F                      l1381 03CD  
                    l1429 0FF9                      l1517 05FA                      l1621 0323  
                    l1471 0EAF                      l1367 0388                      l1359 0378  
                    l1535 0646                      l1519 0606                      l1631 033E  
                    l1385 03DB                      l1377 03C0                      l1369 0398  
                    l1529 0624                      l1467 0EA9                      l1539 0658  
                    l1635 034C                      l1627 0330                      l1619 0313  
                    l1643 0F15                      l1397 0FAF                      l1549 067B  
                    l1493 05BC                      l1565 0412                      l1629 033B  
                    l1645 0F27                      l1671 0F76                      l1559 03FC  
                    l1737 00A5                      l1673 0F80                      l1489 05B5  
                    l1675 0F8A                      l1771 029F                      l1763 027A  
                    l1755 0269                      l1499 05CB                      l1587 0476  
                    l1579 0457                      l1851 070E                      l1835 07AB  
                    l1669 0F6C                      l1749 0261                      l1679 0F94  
                    l1687 0F3D                      l1863 0741                      l1839 06DB  
                    l1785 02B8                      l1777 02A7                      l1699 0518  
                    l1875 0774                      STR_1 003F                      STR_2 005A  
                    STR_3 0012                      STR_4 0048                      STR_5 0012  
                    STR_6 0051                      STR_7 001B                      STR_8 0036  
                    STR_9 001B                      _BRGH 04C2                      _CREN 00C4  
                    u2005 0314                      u2105 04B3                      u1315 0138  
                    u2035 0332                      u2115 0527                      u1245 0EF9  
                    u1415 038C                      u1255 0F00                      u1335 0147  
                    u2065 0F1A                      u2155 0076                      u1435 039A  
                    u1515 0FC5                      u2165 0093                      u1445 03AF  
                    u1605 01D2                      u1365 015F                      u2407 0ECE  
                    u1455 03C1                      u1535 0FD1                      u1615 023D  
                    u1295 011D                      u2417 007C                      u1545 0FDD  
                    u2427 0099                      u1555 0FE7                      u1580 0EBF  
                    u1735 05E6                      u1825 0625                      u1905 0424  
                    u2377 06C6                      u2387 00AC                      u1915 0436  
                    u2397 0103                      u1765 05FB                      u1925 0458  
                    u1935 0469                      u1945 0477                      u1795 0610  
                    u1975 02E8                      _RCIF 0065                      _OERR 00C1  
                    _SPEN 00C7                      _TXEN 04C5                      _TXIF 0064  
                    _beep 0067                      _main 0695              ___ftpack@arg 0070  
            ___ftpack@exp 0073                      btemp 007E                      ltemp 007E  
                    start 0000                      ttemp 007E                      wtemp 007E  
           __CFG_IESO$OFF 0000         ___bmul@multiplier 0073             __CFG_MCLRE$ON 0000  
            ___fttol@exp1 004A              ___fttol@lval 0046                     ?_beep 0070  
         __end_of___aldiv 03E4                     ?_main 0070           __end_of___awdiv 1000  
         __end_of___ftadd 0695                     STR_10 002D                     STR_11 0009  
                   STR_12 0024             __CFG_WDTE$OFF 0000           __end_of___ftdiv 049C  
                   _ANSEL 0188           ___awdiv@divisor 0076           __end_of___fttol 0355  
                   _T2CON 0012                     _IRCF0 047C                     _IRCF1 047D  
                   _IRCF2 047E           ___awdiv@counter 0020                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
           __CFG_PWRTE$ON 0000              ___lltoft@exp 007D           __end_of_lcdInit 0109  
         __end_of_lcdGoto 0FA3            __CFG_FCMEN$OFF 0000           __end_of_picInit 0EEE  
           ___ftpack@sign 0074                     _motor 0247            __CFG_BOREN$OFF 0000  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 07FC              __end_of_beep 00A8              __end_of_main 07FC  
                  ??_beep 0072                    ??_main 0052             ___fttol@sign1 0045  
                  _CCPR1L 0015                    _CCPR2L 001B          ___awdiv@dividend 0078  
                  ?_motor 002A          __end_of___ftpack 0171                    _ANSELH 0189  
        __end_of___lltoft 0F3C          __end_of_lcdWrite 0ED2                    ___bmul 0EA7  
               ??___aldiv 0078              ?_uartReceive 0070                    ___wmul 0EEE  
               ??___awdiv 007A                 ??___ftadd 0036                 ??___ftdiv 0026  
               ??___fttol 0041          ___awdiv@quotient 0022                 ??_lcdInit 0073  
               ??_lcdGoto 0074                 ??_picInit 0070          __end_of_uartInit 058C  
 __end_of__initialization 07FC                ___ftadd@f1 0030                ___ftadd@f2 0033  
              ___ftdiv@f1 0023                ___ftdiv@f2 0020                ___ftdiv@f3 002B  
     ___bmul@multiplicand 0070                ___fttol@f1 003D            __pcstackCOMMON 0070  
              ___lltoft@c 0078             __end_of_motor 02C7        __size_of_lcdPutstr 002E  
                 ??_motor 002B                __pmaintext 0695                   ?___bmul 0070  
                 ?___wmul 0070        __size_of_setPwmRC1 006B        __size_of_setPwmRC2 006B  
                 _CCP1CON 0017                   _CCP2CON 001D                 ?___ftpack 0070  
               ?___lltoft 0078                 ?_lcdWrite 0070                __stringtab 0003  
               ?_uartInit 004B         __end_of_lcdPutstr 0F6A                   ___aldiv 0355  
         __size_of___bmul 0011                   ___awdiv 0FA3                   ___ftadd 058C  
                 ___ftdiv 03E4           __size_of___wmul 0023                   ___fttol 02C7  
    __size_of_uartReceive 000A                ??___ftpack 0075                   _lcdInit 00A8  
                 _lcdGoto 0F6A                ??___lltoft 007C                   __ptext1 0E9D  
                 __ptext2 049C                   __ptext3 0F11                   __ptext4 02C7  
                 __ptext5 03E4                   __ptext6 058C                   __ptext7 0109  
                 __ptext8 0ED2                   __ptext9 0247                   _picInit 0ED2  
        ___aldiv@dividend 0074                ??_lcdWrite 0071      end_of_initialization 07FC  
       __end_of_setPwmRC1 01DC         __end_of_setPwmRC2 0247                ??_uartInit 007E  
              lcdGoto@col 0073          ___aldiv@quotient 0022                lcdGoto@row 0075  
           setPwmRC1@freq 0026             setPwmRC2@freq 0026             setPwmRC1@duty 0028  
           setPwmRC2@duty 0028                lcdPutstr@s 0074                lcdWrite@rs 0072  
              main@inByte 0054               ___ftdiv@exp 002E            __end_of___bmul 0EB8  
          __end_of___wmul 0F11       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??___bmul 0071                  ??___wmul 0074         __size_of___ftpack 0068  
       __size_of___lltoft 002B                 ___latbits 0002             __pcstackBANK0 0020  
     __end_of__stringdata 0063         __size_of_lcdWrite 001A                  ?___aldiv 0070  
                ?___awdiv 0076                  ?___ftadd 0030                  ?___ftdiv 0020  
                ?___fttol 003D         __size_of_uartInit 00F0                 _lcdPutstr 0F3C  
               beep@times 0074                 __pstrings 0003                setPwmRC1@a 007C  
              setPwmRC2@a 007C                  ?_lcdInit 0070                  ?_lcdGoto 0073  
                ?_picInit 0070               beep@delayMs 0070            __size_of_motor 0080  
         ___aldiv@divisor 0070           ___aldiv@counter 0020            ___wmul@product 0074  
              motor@speed 002F                 _setPwmRC1 0171                 _setPwmRC2 01DC  
           ??_uartReceive 0070                ?_lcdPutstr 0070               __stringbase 0008  
             __stringdata 0009         ___wmul@multiplier 0070             motor@maxSpeed 002D  
              ?_setPwmRC1 0026                ?_setPwmRC2 0026          __size_of___aldiv 008F  
        __size_of___awdiv 005D          __size_of___ftadd 0109          __size_of___ftdiv 00B8  
        __size_of___fttol 008E                  ___ftpack 0109        __end_of__stringtab 0009  
                ___lltoft 0F11       __end_of_uartReceive 0EA7          __size_of_lcdInit 0061  
        __size_of_lcdGoto 0039          __size_of_picInit 001C                  __ptext10 01DC  
                __ptext11 0171                  __ptext20 0067                  __ptext12 0EEE  
                __ptext13 0FA3                  __ptext14 0355                  __ptext15 0EA7  
                __ptext16 0F3C                  __ptext17 00A8                  __ptext18 0F6A  
                __ptext19 0EB8                  beep@loop 0075                  _lcdWrite 0EB8  
           __size_of_beep 0041             __size_of_main 0167              _uartInit$562 004F  
                _uartInit 049C               ??_lcdPutstr 0073              motor@speedLM 002E  
            motor@speedRM 002A               ??_setPwmRC1 007B               ??_setPwmRC2 007B  
               stringcode 0003               _uartReceive 0E9D                  stringdir 0003  
                stringtab 0003              ___aldiv@sign 0021  
